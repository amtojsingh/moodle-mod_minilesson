define ("mod_poodlltime/ttwavencoder",["jquery","core/log"],function(a,b){"use strict";b.debug("TT Wav Encoder initialising");var c={init:function init(a,b){c.sampleRate=a;c.numChannels=b;c.numSamples=0;c.dataViews=[]},encode:function encode(a){if(c.dataViews===void 0){return}for(var b=a[0].length,d=c.numChannels,e=new DataView(new ArrayBuffer(2*(b*d))),f=0,g=0;g<b;++g){for(var h=0,j;h<d;++h){j=32767*a[h][g];e.setInt16(f,0>j?Math.max(j,-32768):Math.min(j,32767),!0);f+=2}}c.dataViews.push(e);c.numSamples+=b},setString:function setString(a,b,c){for(var d=c.length,e=0;e<d;++e){a.setUint8(b+e,c.charCodeAt(e))}},finish:function finish(){var a=2*(c.numChannels*c.numSamples),b=new DataView(new ArrayBuffer(44));c.setString(b,0,"RIFF");b.setUint32(4,36+a,!0);c.setString(b,8,"WAVE");c.setString(b,12,"fmt ");b.setUint32(16,16,!0);b.setUint16(20,1,!0);b.setUint16(22,c.numChannels,!0);b.setUint32(24,c.sampleRate,!0);b.setUint32(28,4*c.sampleRate,!0);b.setUint16(32,2*c.numChannels,!0);b.setUint16(34,16,!0);c.setString(b,36,"data");b.setUint32(40,a,!0);c.dataViews.unshift(b);var d=new Blob(c.dataViews,{type:"audio/wav"});c.cleanup();return d},cancel:function cancel(){delete c.dataViews},cleanup:function cleanup(){c.cancel()}};return c});
//# sourceMappingURL=ttwavencoder.min.js.map

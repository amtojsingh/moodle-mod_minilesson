{"version":3,"sources":["../src/quizhelper.js"],"names":["define","$","log","def","templates","Ajax","polly","dictation","dictationchat","multichoice","speechcards","listenrepeat","debug","controls","submitbuttonclass","init","quizcontainer","quizdata","cmid","attemptid","prepare_html","init_questions","register_events","start_quiz","dd","each","index","item","type","qtype_dictation","qtype_dictationchat","qtype_multichoice","qtype_speechcards","qtype_listenrepeat","on","do_next","stepdata","report_step_grade","currentitem","uniqueid","hide","length","nextitem","show","append","call","methodname","args","step","grade","onSubmit","alert"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'mod_poodlltime/definitions', 'core/templates', 'core/ajax', 'mod_poodlltime/pollyhelper',\n    'mod_poodlltime/dictation', 'mod_poodlltime/dictationchat', 'mod_poodlltime/multichoice', 'mod_poodlltime/speechcards', 'mod_poodlltime/listenrepeat'\n  ],\n  function($, log, def, templates, Ajax, polly, dictation, dictationchat, multichoice, speechcards, listenrepeat) {\n    \"use strict\"; // jshint ;_;\n\n    /*\n    This file is to manage the quiz stage\n     */\n\n    log.debug('Poodll Time Quiz helper: initialising');\n\n    return {\n\n      controls: {},\n      submitbuttonclass: 'mod_poodlltime_quizsubmitbutton',\n\n      init: function(quizcontainer, quizdata, cmid, attemptid) {\n        this.quizdata = quizdata;\n        this.controls.quizcontainer = quizcontainer;\n        this.attemptid = attemptid;\n        this.cmid = cmid;\n        this.prepare_html();\n        this.init_questions(quizdata);\n        this.register_events();\n        this.start_quiz();\n      },\n\n      prepare_html: function() {\n\n        // this.controls.quizcontainer.append(submitbutton);\n\n\n      },\n\n      init_questions: function(quizdata, polly) {\n        var dd = this;\n        $.each(quizdata, function(index, item) {\n          switch (item.type) {\n            case def.qtype_dictation:\n              dictation.init(index, item, dd, polly);\n              break;\n            case def.qtype_dictationchat:\n              dictationchat.init(index, item, dd, polly);\n              break;\n            case def.qtype_multichoice:\n              multichoice.init(index, item, dd);\n              break;\n            case def.qtype_speechcards:\n              speechcards.init(index, item, dd);\n              break;\n            case def.qtype_listenrepeat:\n              listenrepeat.init(index, item, dd);\n              break;\n          }\n\n        });\n\n      },\n\n      register_events: function() {\n        $('.' + this.submitbuttonclass).on('click', function() {\n          //do something\n        });\n      },\n\n      do_next(stepdata) {\n        this.report_step_grade(stepdata);\n        //hide current question\n        var currentitem = this.quizdata[stepdata.index];\n        $(\"#\" + currentitem.uniqueid + \"_container\").hide();\n\n        //show next question or End Screen\n        if (this.quizdata.length > stepdata.index + 1) {\n          var nextitem = this.quizdata[stepdata.index + 1];\n          $(\"#\" + nextitem.uniqueid + \"_container\").show();\n        } else {\n          this.controls.quizcontainer.append(\"<h2>FINISHED Tada</h2>\");\n        }\n      },\n\n      report_step_grade: function(stepdata) {\n        var dd = this;\n        Ajax.call([{\n          methodname: 'mod_poodlltime_report_step_grade',\n          args: {\n            cmid: dd.cmid,\n            step: stepdata.index,\n            grade: stepdata.grade\n          }\n        }]);\n      },\n\n      start_quiz: function() {\n        $(\"#\" + this.quizdata[0].uniqueid + \"_container\").show();\n      },\n\n      //this function is overridden by the calling class\n      onSubmit: function() {\n        alert('quiz submitted. Override this');\n      },\n\n    }; //end of return value\n  });"],"file":"quizhelper.min.js"}
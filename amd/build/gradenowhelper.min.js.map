{"version":3,"sources":["../src/gradenowhelper.js"],"names":["define","$","log","def","popoverhelper","debug","controls","currentmode","modegrading","constants","REVIEWMODE_NONE","REVIEWMODE_MACHINE","REVIEWMODE_HUMAN","REVIEWMODE_SCORESONLY","cd","audioplayerclass","wordplayerclass","wordclass","spaceclass","badwordclass","endspaceclass","unreadwordclass","unreadspaceclass","wpmscoreid","accuracyscoreid","sessionscoreid","errorscoreid","errorrateid","scrateid","formelementwpmscore","formelementaccuracy","formelementsessionscore","formelementendword","formelementtime","formelementerrors","formelementselfcorrections","formelementnotes","modebutton","spotcheckmodebutton","transcriptmodebutton","msvmodebutton","gradingmodebutton","clearbutton","spotcheckmode","msvmode","transcriptmode","gradingmode","aiunmatched","passagecontainer","maybeselfcorrectedwordclass","selfcorrectedwordclass","notesclass","structuralclass","meaningclass","visualclass","msvcontainerclass","options","enabletts","targetwpm","ttslanguage","totalseconds","allowearlyexit","timelimit","enforcemarker","totalwordcount","wpm","accuracy","sessionscore","endwordnumber","errorwords","activityid","attemptid","sesskey","init","config","theid","configcontrol","get","opts","JSON","parse","value","remove","register_controls","reviewmode","readonly","length","selfcorrections","sessionmatches","aidata","transcriptwords","transcript","split","filter","el","redrawgradestate","thespace","addClass","register_events","m","processloadedaudio","sessiontime","Math","round","prop","val","processscores","init_popoverhelper","that","onReject","clickwordnumber","attr","nochange","playchain","fetchPlayChain","wordindex","startword","endword","theword","storewordstate","stateerror","text","markup_aiunmatchedspaces","onAccept","removeClass","onMSVClose","msvResults","fetchMSVResults","markupPlayChain","state","msv","getMSVBadge","items","s","v","getMSVClasses","addclasses","removeclasses","wordnumber","addclasses_word","removeclasses_word","msvmarkup","msvbadge","stateselfcorrect","statecorrect","removeAttr","wordplayer","audioplayer","eachword","eachspace","endwordmarker","spotcheckword","wpmscorebox","accuracyscorebox","sessionscorebox","errorscorebox","errorratebox","scratebox","notes","on","modespotcheck","modemsv","parseInt","doPlaySpotCheck","change","click","themsv","hasClass","addQuickGrader","modetranscript","chunk","fetchTranscriptChunk","addTranscript","msvdata","Object","keys","addMSVGrader","msvclasses","processunread","each","undoCurrentMode","doGradingMode","updateButtonStates","doSpotCheckMode","doMSVMode","doTranscriptMode","undoGradingMode","undoSpotCheckMode","undoMSVMode","undoTranscriptMode","printAttemptBtn","spotcheckindex","theplayer","pad","duration","endtime","parseFloat","audioend","isNaN","starttime","audiostart","currentTime","off","currenttime","pause","play","startindex","isbad","isunmatched","endindex","passageendword","markup_aiunmatchedwords","prevmatch","index","unmatchedcount","errorword","checkindex","transcriptlength","tposition","ret","slice","join","trim","playword","M","cfg","wwwroot","componentpath","encodeURIComponent","load","wordstate","word","processword","processspace","markup_maybeselfcorrects","match","verymaybe","pposition","hasOwnProperty","altmatch","errorscore","selfcorrectionsscore","wpmscore","accuracyscore","usewpmscore","errorratescore","errorrate","scratescore","scrate","stringify"],"mappings":"AAAAA,OAAM,iCAAC,CAAC,QAAD,CAAU,UAAV,CAAqB,4BAArB,CAAkD,8BAAlD,CAAD,CAAoF,SAASC,CAAT,CAAWC,CAAX,CAAeC,CAAf,CAAmBC,CAAnB,CAAkC,CACxH,aAEAF,CAAG,CAACG,KAAJ,CAAU,+BAAV,EAEA,MAAM,CAGFC,QAAQ,CAAE,EAHR,CAIFC,WAAW,CAAEJ,CAAG,CAACK,WAJf,CAMFC,SAAS,CAAE,CACTC,eAAe,CAAE,CADR,CAETC,kBAAkB,CAAE,CAFX,CAGTC,gBAAgB,CAAE,CAHT,CAITC,qBAAqB,CAAE,CAJd,CANT,CAcFC,EAAE,CAAE,CAEAC,gBAAgB,CAAEZ,CAAG,CAACY,gBAFtB,CAGAC,eAAe,CAAEb,CAAG,CAACa,eAHrB,CAIAC,SAAS,CAAEd,CAAG,CAACc,SAJf,CAKAC,UAAU,CAAEf,CAAG,CAACe,UALhB,CAMAC,YAAY,CAAEhB,CAAG,CAACgB,YANlB,CAOAC,aAAa,CAAEjB,CAAG,CAACiB,aAPnB,CAQAC,eAAe,CAAGlB,CAAG,CAACkB,eARtB,CASAC,gBAAgB,CAAGnB,CAAG,CAACmB,gBATvB,CAUAC,UAAU,CAAEpB,CAAG,CAACoB,UAVhB,CAWAC,eAAe,CAAErB,CAAG,CAACqB,eAXrB,CAYAC,cAAc,CAAEtB,CAAG,CAACsB,cAZpB,CAaAC,YAAY,CAAEvB,CAAG,CAACuB,YAblB,CAcAC,WAAW,CAAExB,CAAG,CAACwB,WAdjB,CAeAC,QAAQ,CAAEzB,CAAG,CAACyB,QAfd,CAgBAC,mBAAmB,CAAE1B,CAAG,CAAC0B,mBAhBzB,CAiBAC,mBAAmB,CAAE3B,CAAG,CAAC2B,mBAjBzB,CAkBAC,uBAAuB,CAAE5B,CAAG,CAAC4B,uBAlB7B,CAmBAC,kBAAkB,CAAE7B,CAAG,CAAC6B,kBAnBxB,CAoBAC,eAAe,CAAE9B,CAAG,CAAC8B,eApBrB,CAqBAC,iBAAiB,CAAE/B,CAAG,CAAC+B,iBArBvB,CAsBAC,0BAA0B,CAAEhC,CAAG,CAACgC,0BAtBhC,CAuBAC,gBAAgB,CAAEjC,CAAG,CAACiC,gBAvBtB,CAwBAC,UAAU,CAAElC,CAAG,CAACkC,UAxBhB,CA0BAC,mBAAmB,CAAEnC,CAAG,CAACmC,mBA1BzB,CA2BAC,oBAAoB,CAAEpC,CAAG,CAACoC,oBA3B1B,CA4BAC,aAAa,CAAErC,CAAG,CAACqC,aA5BnB,CA6BAC,iBAAiB,CAAEtC,CAAG,CAACsC,iBA7BvB,CA8BAC,WAAW,CAAEvC,CAAG,CAACuC,WA9BjB,CA+BAC,aAAa,CAAExC,CAAG,CAACwC,aA/BnB,CAgCAC,OAAO,CAAEzC,CAAG,CAACyC,OAhCb,CAiCAC,cAAc,CAAE1C,CAAG,CAAC0C,cAjCpB,CAkCAC,WAAW,CAAE3C,CAAG,CAAC2C,WAlCjB,CAmCAC,WAAW,CAAE5C,CAAG,CAAC4C,WAnCjB,CAoCAC,gBAAgB,CAAE7C,CAAG,CAAC6C,gBApCtB,CAsCAC,2BAA2B,CAAE9C,CAAG,CAAC8C,2BAtCjC,CAuCAC,sBAAsB,CAAE/C,CAAG,CAAC+C,sBAvC5B,CAwCAC,UAAU,CAAEhD,CAAG,CAACgD,UAxChB,CAyCAC,eAAe,CAAEjD,CAAG,CAACiD,eAzCrB,CA0CAC,YAAY,CAAElD,CAAG,CAACkD,YA1ClB,CA2CAC,WAAW,CAAEnD,CAAG,CAACmD,WA3CjB,CA4CAC,iBAAiB,CAAEpD,CAAG,CAACoD,iBA5CvB,CAdF,CA8DFC,OAAO,CAAE,CACLC,SAAS,GADJ,CAELC,SAAS,CAAE,GAFN,CAGLC,WAAW,CAAE,IAHR,CAILC,YAAY,CAAE,EAJT,CAKLC,cAAc,GALT,CAMLC,SAAS,CAAE,EANN,CAOLC,aAAa,GAPR,CAQLC,cAAc,CAAE,CARX,CASLC,GAAG,CAAE,CATA,CAULC,QAAQ,CAAE,CAVL,CAWLC,YAAY,CAAE,CAXT,CAYLC,aAAa,CAAE,CAZV,CAaLC,UAAU,CAAE,EAbP,CAcLC,UAAU,CAAE,IAdP,CAeLC,SAAS,CAAE,IAfN,CAgBLC,OAAO,CAAE,IAhBJ,CA9DP,CAkFFC,IAAI,CAAE,cAASC,CAAT,CAAgB,IAGdC,CAAAA,CAAK,CAAC,IAAMD,CAAM,GAHJ,CAIdE,CAAa,CAAG3E,CAAC,CAAC0E,CAAD,CAAD,CAASE,GAAT,CAAa,CAAb,CAJF,CAKlB,GAAGD,CAAH,CAAiB,CACb,GAAIE,CAAAA,CAAI,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAa,CAACK,KAAzB,CAAX,CACAhF,CAAC,CAAC0E,CAAD,CAAD,CAASO,MAAT,EACH,CAHD,IAGK,CAEDhF,CAAG,CAACG,KAAJ,CAAU,yDAAV,EACA,MACH,CAGD,KAAK8E,iBAAL,GAGA,KAAK3B,OAAL,CAAac,UAAb,CAA0BQ,CAAI,WAA9B,CACA,KAAKtB,OAAL,CAAae,SAAb,CAAyBO,CAAI,UAA7B,CACA,KAAKtB,OAAL,CAAagB,OAAb,CAAuBM,CAAI,QAA3B,CACA,KAAKtB,OAAL,CAAaC,SAAb,CAAyBqB,CAAI,UAA7B,CACA,KAAKtB,OAAL,CAAaG,WAAb,CAA2BmB,CAAI,YAA/B,CACA,KAAKtB,OAAL,CAAaE,SAAb,CAAyBoB,CAAI,UAA7B,CACA,KAAKtB,OAAL,CAAaK,cAAb,CAA8BiB,CAAI,eAAlC,CACA,KAAKtB,OAAL,CAAaM,SAAb,CAAyBgB,CAAI,UAA7B,CACA,KAAKtB,OAAL,CAAa4B,UAAb,CAA0BN,CAAI,WAA9B,CACA,KAAKtB,OAAL,CAAa6B,QAAb,CAAwBP,CAAI,SAA5B,CACA,KAAKtB,OAAL,CAAaQ,cAAb,CAA8B/D,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAf,CAAD,CAA2BqE,MAAzD,CAEA,GAAuB,CAApB,CAAAR,CAAI,YAAP,CAAyB,CAErB,GAA2B,EAAxB,GAAAA,CAAI,cAAJ,EAAsD,IAAxB,GAAAA,CAAI,cAArC,CAA+D,CAC3D,KAAKtB,OAAL,CAAaa,UAAb,CAA0B,EAC7B,CAFD,IAEK,CACD,KAAKb,OAAL,CAAaa,UAAb,CAA0BU,IAAI,CAACC,KAAL,CAAWF,CAAI,cAAf,CAC7B,CACD,GAA6B,EAA1B,GAAAA,CAAI,gBAAJ,EAA0D,IAA1B,GAAAA,CAAI,gBAAvC,CAAmE,CAC/D,KAAKtB,OAAL,CAAa+B,eAAb,CAA+B,EAClC,CAFD,IAEK,CACD,KAAK/B,OAAL,CAAa+B,eAAb,CAA+BR,IAAI,CAACC,KAAL,CAAWF,CAAI,gBAAf,CAClC,CACD,KAAKtB,OAAL,CAAaI,YAAb,CAA0BkB,CAAI,YAA9B,CACA,KAAKtB,OAAL,CAAaY,aAAb,CAA2BU,CAAI,eAA/B,CACA,KAAKtB,OAAL,CAAaW,YAAb,CAA0BW,CAAI,aAA9B,CACA,KAAKtB,OAAL,CAAaU,QAAb,CAAsBY,CAAI,SAA1B,CACA,KAAKtB,OAAL,CAAaS,GAAb,CAAiBa,CAAI,IAArB,CAGA,KAAKtB,OAAL,CAAagC,cAAb,CAA4BT,IAAI,CAACC,KAAL,CAAWF,CAAI,eAAf,CAA5B,CACA,KAAKtB,OAAL,CAAaiC,MAAb,CAAoBX,CAAI,OAAxB,CACA,GAAG,KAAKtB,OAAL,CAAaiC,MAAhB,CAAwB,CACpB,KAAKjC,OAAL,CAAakC,eAAb,CAA+BZ,CAAI,OAAJ,CAAea,UAAf,CAA0BC,KAA1B,CAAgC,GAAhC,CAA/B,CAGA,KAAKpC,OAAL,CAAakC,eAAb,CAA+B,KAAKlC,OAAL,CAAakC,eAAb,CAA6BG,MAA7B,CAAoC,SAAUC,CAAV,CAAc,CAC7E,MAAc,EAAP,GAAAA,CACV,CAF8B,CAIlC,CARD,IAQK,CACD,KAAKtC,OAAL,CAAakC,eAAb,CAA6B,EAChC,CAGD,KAAKK,gBAAL,EACH,CAnCD,IAmCK,CAED,KAAKvC,OAAL,CAAaY,aAAb,CAA6B,KAAKZ,OAAL,CAAaQ,cAC7C,CAGD,GAAIgC,CAAAA,CAAQ,CAAG/F,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiC,KAAKsC,OAAL,CAAaY,aAA/C,CAAhB,CACA4B,CAAQ,CAACC,QAAT,CAAkB,KAAKnF,EAAL,CAAQM,aAA1B,EAGD,KAAK8E,eAAL,GA3EmB,GAiFdC,CAAAA,CAAC,CAAG,IAjFU,CA+GlB,CA7BwB,QAApBC,CAAAA,kBAAoB,EAAU,CAC9B,GAAGD,CAAC,CAAC3C,OAAF,CAAUK,cAAb,CAA4B,CAKxB,GAAGsC,CAAC,CAAC3C,OAAF,CAAUiC,MAAV,EAAoBU,CAAC,CAAC3C,OAAF,CAAUiC,MAAV,CAAiBY,WAAxC,CAAqD,CACjDF,CAAC,CAAC3C,OAAF,CAAUI,YAAV,CAAyBuC,CAAC,CAAC3C,OAAF,CAAUiC,MAAV,CAAiBY,WAC7C,CAFD,IAEM,CACFF,CAAC,CAAC3C,OAAF,CAAUI,YAAV,CAAyB0C,IAAI,CAACC,KAAL,CAAWtG,CAAC,CAAC,IAAMkG,CAAC,CAACrF,EAAF,CAAKC,gBAAZ,CAAD,CAA+ByF,IAA/B,CAAoC,UAApC,CAAX,CAC5B,CACJ,CAVD,IAUK,CACDL,CAAC,CAAC3C,OAAF,CAAUI,YAAV,CAAyBuC,CAAC,CAAC3C,OAAF,CAAUM,SACtC,CAEDqC,CAAC,CAAC7F,QAAF,CAAW2B,eAAX,CAA2BwE,GAA3B,CAA+BN,CAAC,CAAC3C,OAAF,CAAUI,YAAzC,EACAuC,CAAC,CAACO,aAAF,EACH,CAYD,IAGA,KAAKC,kBAAL,EAEH,CAtMC,CAyMFA,kBAAkB,CAAE,6BAAU,CAC1B,GAAIC,CAAAA,CAAI,CAAE,IAAV,CAGAxG,CAAa,CAACyG,QAAd,CAAuB,UAAU,IACzBC,CAAAA,CAAe,CAAG7G,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CADO,CAIzBC,CAAQ,CAAIF,CAAe,GAAIF,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAJnB,CAK7B,GAAG2C,CAAH,CAAY,CACR5G,CAAa,CAAC8E,MAAd,GACA,MACH,CAID,OADI+B,CAAAA,CAAS,CAAEL,CAAI,CAACM,cAAL,CAAoBJ,CAApB,CACf,CAAQK,CAAS,CAAGF,CAAS,CAACG,SAA9B,CAAwCD,CAAS,EAAEF,CAAS,CAACI,OAA7D,CAAqEF,CAAS,EAA9E,CAAiF,CAC7E,GAAG,EAAEA,CAAS,GAAIP,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAA5B,CAAH,CAA2C,CACvC,GAAG8C,CAAS,EAAEL,CAAd,CAA+B,IACvBQ,CAAAA,CAAO,CAAGrH,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCkG,CAAjC,CADY,CAEvBnB,CAAQ,CAAG/F,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiCiG,CAAlC,CAFW,CAI3BP,CAAI,CAACW,cAAL,CAAoBpH,CAAG,CAACqH,UAAxB,CAAoCL,CAApC,CAA+CG,CAAO,CAACG,IAAR,EAA/C,CADa,EACb,EACAH,CAAO,CAACrB,QAAR,CAAiBW,CAAI,CAAC9F,EAAL,CAAQK,YAAzB,EACA,GAAIgG,CAAS,EAAIF,CAAS,CAACI,OAA3B,CAAoC,CAEnC,CACJ,CACJ,CACJ,CAEDT,CAAI,CAACc,wBAAL,GACAd,CAAI,CAACF,aAAL,GACAtG,CAAa,CAAC8E,MAAd,EACH,CA9BD,CAiCA9E,CAAa,CAACuH,QAAd,CAAuB,UAAU,IACzBb,CAAAA,CAAe,CAAG7G,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CADO,CAIzBC,CAAQ,CAAG,EAAEF,CAAe,GAAIF,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAAlC,CAJc,CAK7B,GAAG2C,CAAH,CAAY,CACR5G,CAAa,CAAC8E,MAAd,GACA,MACH,CAGD,OADI+B,CAAAA,CAAS,CAAEL,CAAI,CAACM,cAAL,CAAoBJ,CAApB,CACf,CAAQK,CAAS,CAAGF,CAAS,CAACG,SAA9B,CAAwCD,CAAS,EAAEF,CAAS,CAACI,OAA7D,CAAqEF,CAAS,EAA9E,CAAiF,CAC7E,GAAGA,CAAS,GAAIP,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAA7B,CAAwC,CACpC,GAAG8C,CAAS,EAAEL,CAAd,CAA+B,CAC3B,MAAOF,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAAb,CAAwB8C,CAAxB,CAAP,CAD2B,GAEvBG,CAAAA,CAAO,CAAGrH,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCkG,CAAjC,CAFY,CAGvBnB,CAAQ,CAAG/F,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiCiG,CAAlC,CAHW,CAI3BG,CAAO,CAACM,WAAR,CAAoBhB,CAAI,CAAC9F,EAAL,CAAQK,YAA5B,CACH,CACJ,CACJ,CAEDyF,CAAI,CAACc,wBAAL,GACAd,CAAI,CAACF,aAAL,GACAtG,CAAa,CAAC8E,MAAd,EACH,CAzBD,CA4BA9E,CAAa,CAACyH,UAAd,CAAyB,UAAU,IAC3Bf,CAAAA,CAAe,CAAG7G,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CADS,CAE3Be,CAAU,CAAG1H,CAAa,CAAC2H,eAAd,EAFc,CAI/BnB,CAAI,CAACoB,eAAL,CAAqBF,CAAU,CAACG,KAAhC,CAAsCnB,CAAtC,CAAsDgB,CAAU,CAACI,GAAjE,CAAqEtB,CAArE,EAEAA,CAAI,CAACc,wBAAL,GACAd,CAAI,CAACF,aAAL,GACAtG,CAAa,CAAC8E,MAAd,EACH,CATD,CAYA9E,CAAa,CAACqE,IAAd,EACH,CAvRC,CAyRF0D,WAAW,CAAE,qBAASD,CAAT,CAAa,CACtB,GAAIE,CAAAA,CAAK,CAAG,EAAZ,CAGA,GAAG,CAACF,CAAJ,CAAS,CACL,QACH,CAGD,GAAGA,CAAG,CAAC/B,CAAJ,EAAiB,GAAR,GAAA+B,CAAG,CAAC/B,CAAhB,CAAwB,CACpBiC,CAAK,EAAE,GACV,CACD,GAAGF,CAAG,CAACG,CAAJ,EAAiB,GAAR,GAAAH,CAAG,CAACG,CAAhB,CAAwB,CACpBD,CAAK,EAAE,GACV,CACD,GAAGF,CAAG,CAACI,CAAJ,EAAiB,GAAR,GAAAJ,CAAG,CAACI,CAAhB,CAAwB,CACpBF,CAAK,EAAE,GACV,CACD,GAAW,EAAR,EAAAA,CAAH,CAAc,CACV,QACH,CAFD,IAEK,CACD,MAAOA,CAAAA,CACV,CACJ,CAhTC,CAkTFG,aAAa,CAAE,uBAASL,CAAT,CAAa,IACpBM,CAAAA,CAAU,CAAG,EADO,CAEpBC,CAAa,CAAG,EAFI,CAKxB,GAAG,CAACP,CAAJ,CAAS,CACLO,CAAa,CAAG,KAAK3H,EAAL,CAAQsC,eAAR,CAA0B,GAA1B,CACT,KAAKtC,EAAL,CAAQuC,YADC,CACc,GADd,CAEV,KAAKvC,EAAL,CAAQwC,WAFE,CAEY,GAF5B,CAIA,MAAO,CAACkF,UAAU,CAAEA,CAAb,CACHC,aAAa,CAAEA,CADZ,CAEV,CAGD,GAAGP,CAAG,CAACG,CAAJ,EAAgB,CAAP,EAAAH,CAAG,CAACG,CAAhB,CAAqB,CACjBG,CAAU,EAAI,KAAK1H,EAAL,CAAQsC,eAAR,CAA0B,GAC3C,CAFD,IAEK,CACDqF,CAAa,EAAI,KAAK3H,EAAL,CAAQsC,eAAR,CAA0B,GAC9C,CACD,GAAG8E,CAAG,CAAC/B,CAAJ,EAAgB,CAAP,EAAA+B,CAAG,CAAC/B,CAAhB,CAAqB,CACjBqC,CAAU,EAAI,KAAK1H,EAAL,CAAQuC,YAAR,CAAuB,GACxC,CAFD,IAEK,CACDoF,CAAa,EAAI,KAAK3H,EAAL,CAAQuC,YAAR,CAAuB,GAC3C,CACD,GAAG6E,CAAG,CAACI,CAAJ,EAAgB,CAAP,EAAAJ,CAAG,CAACI,CAAhB,CAAqB,CACjBE,CAAU,EAAI,KAAK1H,EAAL,CAAQwC,WAAR,CAAsB,GACvC,CAFD,IAEK,CACDmF,CAAa,EAAI,KAAK3H,EAAL,CAAQwC,WAAR,CAAsB,GAC1C,CACD,MAAO,CAACkF,UAAU,CAAEA,CAAb,CAAyBC,aAAa,CAAEA,CAAxC,CACV,CAjVC,CAmVFT,eAAe,CAAE,yBAASC,CAAT,CAAeS,CAAf,CAA0BR,CAA1B,CAA8BtB,CAA9B,CAAmC,IAE5C+B,CAAAA,CAAe,CAAG,EAF0B,CAG5CC,CAAkB,CAAG,EAHuB,CAQ5CC,CAAS,CAAGjC,CAAI,CAAC2B,aAAL,CAAmBL,CAAnB,CARgC,CAShDS,CAAe,CAAGE,CAAS,CAACL,UAA5B,CACAI,CAAkB,CAAGC,CAAS,CAACJ,aAA/B,CAGA,GAAIK,CAAAA,CAAQ,CAAGlC,CAAI,CAACuB,WAAL,CAAiBD,CAAjB,CAAf,CAGA,OAAOD,CAAP,EACI,IAAK9H,CAAAA,CAAG,CAACqH,UAAT,CACImB,CAAe,EAAI/B,CAAI,CAAC9F,EAAL,CAAQK,YAAR,CAAwB,GAA3C,CACAyH,CAAkB,EAAIhC,CAAI,CAAC9F,EAAL,CAAQoC,sBAAR,CAAiC,GAAjC,CAAwC0D,CAAI,CAAC9F,EAAL,CAAQmC,2BAAhD,CAA8E,GAApG,CACA,MACJ,IAAK9C,CAAAA,CAAG,CAAC4I,gBAAT,CACIJ,CAAe,EAAK/B,CAAI,CAAC9F,EAAL,CAAQoC,sBAAR,CAAkC,GAAtD,CACA0F,CAAkB,EAAKhC,CAAI,CAAC9F,EAAL,CAAQK,YAAR,CAAuB,GAAvB,CAA8ByF,CAAI,CAAC9F,EAAL,CAAQmC,2BAAtC,CAAoE,GAA3F,CACA,MAEJ,IAAK9C,CAAAA,CAAG,CAAC6I,YAAT,CACIJ,CAAkB,EAAKhC,CAAI,CAAC9F,EAAL,CAAQK,YAAR,CAAuB,GAAvB,CAA8ByF,CAAI,CAAC9F,EAAL,CAAQoC,sBAAtC,CAA+D,GAA/D,CAAsE0D,CAAI,CAAC9F,EAAL,CAAQmC,2BAA9E,CAA4G,GAAnI,CAXR,CAeA,OADIgE,CAAAA,CAAS,CAAEL,CAAI,CAACM,cAAL,CAAoBwB,CAApB,CACf,CAAQvB,CAAS,CAAGF,CAAS,CAACG,SAA9B,CAAwCD,CAAS,EAAEF,CAAS,CAACI,OAA7D,CAAqEF,CAAS,EAA9E,CAAiF,CAC7E,GAAGuB,CAAU,EAAEvB,CAAf,CAA0B,IAClBG,CAAAA,CAAO,CAAGrH,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCkG,CAAjC,CADO,CAElBnB,CAAQ,CAAG/F,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiCiG,CAAlC,CAFM,CAGtBP,CAAI,CAACW,cAAL,CAAoBU,CAApB,CAA2Bd,CAA3B,CAAsCG,CAAO,CAACG,IAAR,EAAtC,CAAsDS,CAAtD,EAEAZ,CAAO,CAACrB,QAAR,CAAiB0C,CAAjB,EACA,GAAIxB,CAAS,EAAIF,CAAS,CAACI,OAA3B,CAAoC,CAChCrB,CAAQ,CAACC,QAAT,CAnCW,EAmCX,CACH,CAEDqB,CAAO,CAACM,WAAR,CAAoBgB,CAApB,EACA5C,CAAQ,CAAC4B,WAAT,CAtCiB,EAsCjB,EAGA,GAAIkB,CAAJ,CAAc,CACVxB,CAAO,CAACP,IAAR,CAAa,eAAb,CAA8B+B,CAA9B,CACH,CAFD,IAEO,CACHxB,CAAO,CAAC2B,UAAR,CAAmB,eAAnB,CACH,CACJ,CAEJ,CACJ,CAzYC,CA2YF9D,iBAAiB,CAAE,4BAAU,CAEzB,KAAK7E,QAAL,CAAc4I,UAAd,CAA2BjJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQE,eAAf,CAA5B,CACA,KAAKV,QAAL,CAAc6I,WAAd,CAA4BlJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQC,gBAAf,CAA7B,CACA,KAAKT,QAAL,CAAc8I,QAAd,CAAyBnJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAf,CAA1B,CACA,KAAKX,QAAL,CAAc+I,SAAd,CAA0BpJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQI,UAAf,CAA3B,CACA,KAAKZ,QAAL,CAAcgJ,aAAd,CAA+BrJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiC,KAAKsC,OAAL,CAAaY,aAA/C,CAAhC,CACA,KAAK9D,QAAL,CAAciJ,aAAd,CAA8BtJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQ6B,aAAf,CAA/B,CAEA,KAAKrC,QAAL,CAAckJ,WAAd,CAA4BvJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQS,UAAf,CAA7B,CACA,KAAKjB,QAAL,CAAcmJ,gBAAd,CAAiCxJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQU,eAAf,CAAlC,CACA,KAAKlB,QAAL,CAAcoJ,eAAd,CAAgCzJ,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQW,cAAf,CAAjC,CACA,KAAKnB,QAAL,CAAcqJ,aAAd,CAA8B1J,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQY,YAAf,CAA/B,CACA,KAAKpB,QAAL,CAAcsJ,YAAd,CAA6B3J,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQa,WAAf,CAA9B,CACA,KAAKrB,QAAL,CAAcuJ,SAAd,CAA0B5J,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQc,QAAf,CAA3B,CAEA,KAAKtB,QAAL,CAAcuB,mBAAd,CAAoC5B,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQe,mBAAf,CAArC,CACA,KAAKvB,QAAL,CAAcyB,uBAAd,CAAwC9B,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQiB,uBAAf,CAAzC,CACA,KAAKzB,QAAL,CAAcwB,mBAAd,CAAoC7B,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQgB,mBAAf,CAArC,CACA,KAAKxB,QAAL,CAAc0B,kBAAd,CAAmC/B,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQkB,kBAAf,CAApC,CACA,KAAK1B,QAAL,CAAc4B,iBAAd,CAAkCjC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQoB,iBAAf,CAAnC,CACA,KAAK5B,QAAL,CAAc8B,gBAAd,CAAiCnC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQsB,gBAAf,CAAlC,CACA,KAAK9B,QAAL,CAAc6B,0BAAd,CAA2ClC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQqB,0BAAf,CAA5C,CACA,KAAK7B,QAAL,CAAc2B,eAAd,CAAgChC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQmB,eAAf,CAAjC,CAEA,KAAK3B,QAAL,CAAc0C,gBAAd,CAAiC/C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQkC,gBAAf,CAAlC,CACA,KAAK1C,QAAL,CAAcwJ,KAAd,CAAsB7J,CAAC,CAAC,IAAO,KAAKa,EAAL,CAAQqC,UAAhB,CAAvB,CAGA,KAAK7C,QAAL,CAAc+B,UAAd,CAA4BpC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQuB,UAAf,CAA7B,CACA,KAAK/B,QAAL,CAAcmC,iBAAd,CAAmCxC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQ2B,iBAAf,CAApC,CACA,KAAKnC,QAAL,CAAcgC,mBAAd,CAAqCrC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQwB,mBAAf,CAAtC,CACA,KAAKhC,QAAL,CAAckC,aAAd,CAA+BvC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQ0B,aAAf,CAAhC,CACA,KAAKlC,QAAL,CAAciC,oBAAd,CAAsCtC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQyB,oBAAf,CAAvC,CACA,KAAKjC,QAAL,CAAcoC,WAAd,CAA6BzC,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQ4B,WAAf,CAEjC,CA/aC,CAibFwD,eAAe,CAAE,0BAAU,CACvB,GAAIU,CAAAA,CAAI,CAAG,IAAX,CAKA,KAAKtG,QAAL,CAAc0C,gBAAd,CAA+B+G,EAA/B,CAAkC,OAAlC,CACI,IAAM,KAAKjJ,EAAL,CAAQK,YAAd,CACA,KADA,CACQ,KAAKL,EAAL,CAAQmC,2BADhB,CAEA,KAFA,CAEQ,KAAKnC,EAAL,CAAQoC,sBAFhB,CAGA,KAHA,CAGQ,KAAKpC,EAAL,CAAQiC,WAJpB,CAIgC,UAAU,CACtC,GAAG6D,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAAC6J,aAAvB,EAAwCpD,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAAC8J,OAAlE,CAA2E,CACvE,GAAIvB,CAAAA,CAAU,CAAGwB,QAAQ,CAACjK,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAAD,CAAzB,CACAH,CAAI,CAACuD,eAAL,CAAqBzB,CAArB,CACH,CACJ,CATD,EAaA,IAAG,KAAKlF,OAAL,CAAa6B,QAAhB,EAyCI,KAAK/E,QAAL,CAAcwJ,KAAd,CAAoBM,MAApB,CAA2B,UAAU,CACjCxD,CAAI,CAACtG,QAAL,CAAc8B,gBAAd,CAA+BqE,GAA/B,CAAmCxG,CAAC,CAAC,IAAD,CAAD,CAAQwG,GAAR,EAAnC,CACH,CAFD,EAKA,KAAKnG,QAAL,CAAc8I,QAAd,CAAuBiB,KAAvB,CACI,UAAW,IAGH3B,CAAAA,CAAU,CAAGzI,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAHV,CAIHO,CAAO,CAAGrH,CAAC,CAAC,IAAD,CAAD,CAAQwH,IAAR,EAJP,CAKH6C,CAAM,CAAG,EALN,CAOP,OAAO1D,CAAI,CAACrG,WAAZ,EACI,IAAKJ,CAAAA,CAAG,CAAC6J,aAAT,CACI,GAAG/J,CAAC,CAAC,IAAD,CAAD,CAAQsK,QAAR,CAAiB3D,CAAI,CAAC9F,EAAL,CAAQK,YAAzB,GAA0ClB,CAAC,CAAC,IAAD,CAAD,CAAQsK,QAAR,CAAiB3D,CAAI,CAAC9F,EAAL,CAAQiC,WAAzB,CAA7C,CAAoF,CAChF3C,CAAa,CAACoK,cAAd,CAA6B,IAA7B,CACH,CACD,OAEJ,IAAKrK,CAAAA,CAAG,CAACsK,cAAT,CACI,GAAIC,CAAAA,CAAK,CAAG9D,CAAI,CAAC+D,oBAAL,CAA0BjC,CAA1B,CAAZ,CACA,GAAGgC,CAAH,CAAS,CACLtK,CAAa,CAACwK,aAAd,CAA4B,IAA5B,CAAiCF,CAAjC,CACH,CACD,OAEJ,IAAKvK,CAAAA,CAAG,CAAC8J,OAAT,CAKI,GAAIY,CAAAA,CAAO,CAAC,EAAZ,CACA,GAAGnC,CAAU,GAAI9B,CAAAA,CAAI,CAACpD,OAAL,CAAa+B,eAA9B,CAA+C,CAC3CsF,CAAO,CAAC5C,KAAR,CAAc9H,CAAG,CAAC4I,gBAAlB,CACA8B,CAAO,CAAC3C,GAAR,CAAYtB,CAAI,CAACpD,OAAL,CAAa+B,eAAb,CAA6BmD,CAA7B,EAAyCR,GAEvD,CAJF,IAIO,IAAGQ,CAAU,GAAI9B,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAA9B,CAA0C,CAC7CwG,CAAO,CAAC5C,KAAR,CAAc9H,CAAG,CAACqH,UAAlB,CACAqD,CAAO,CAAC3C,GAAR,CAAYtB,CAAI,CAACpD,OAAL,CAAaa,UAAb,CAAwBqE,CAAxB,EAAoCR,GACnD,CAHM,IAGF,CACD2C,CAAO,CAAC5C,KAAR,CAAc9H,CAAG,CAAC6I,YAAlB,CACA6B,CAAO,CAAC3C,GAAR,CAAY,CAACG,CAAC,CAAE,CAAJ,CAAOlC,CAAC,CAAE,CAAV,CAAamC,CAAC,CAAE,CAAhB,CACf,CAED,GAAG,CAACuC,CAAO,CAAC3C,GAAT,EAAgB,CAAC4C,MAAM,CAACC,IAAP,CAAYF,CAAO,CAAC3C,GAApB,EAAyB5C,MAA7C,CAAoD,CAACuF,CAAO,CAAC3C,GAAR,CAAY,CAACG,CAAC,CAAE,CAAJ,CAAOlC,CAAC,CAAE,CAAV,CAAamC,CAAC,CAAE,CAAhB,CAAoB,CAErFlI,CAAa,CAAC4K,YAAd,CAA2B,IAA3B,CAAgCH,CAAhC,EAEA,OAEJ,IAAK1K,CAAAA,CAAG,CAACK,WAAT,CACA,QAEI,GAAGoG,CAAI,CAACpD,OAAL,CAAaO,aAAb,EAA8B,CAAO2E,CAAP,EAA0B9B,CAAI,CAACpD,OAAL,CAAaY,aAAxE,CAAuF,CACnF,MACH,CAED,GAAGsE,CAAU,GAAI9B,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAA9B,CAAyC,CACrCuC,CAAI,CAACW,cAAL,CAAoBpH,CAAG,CAAC6I,YAAxB,CAAqCN,CAArC,CAAgDpB,CAAhD,CAAwDgD,CAAxD,EACArK,CAAC,CAAC,IAAD,CAAD,CAAQ2H,WAAR,CAAoBhB,CAAI,CAAC9F,EAAL,CAAQK,YAAR,CAAuB,GAAvB,CAA6ByF,CAAI,CAAC9F,EAAL,CAAQoC,sBAAzD,CAEH,CAJD,IAIK,CACD0D,CAAI,CAACW,cAAL,CAAoBpH,CAAG,CAACqH,UAAxB,CAAmCkB,CAAnC,CAA8CpB,CAA9C,CAAsDgD,CAAtD,EACArK,CAAC,CAAC,IAAD,CAAD,CAAQ2H,WAAR,CAAoBhB,CAAI,CAAC9F,EAAL,CAAQoC,sBAA5B,EACAjD,CAAC,CAAC,IAAD,CAAD,CAAQgG,QAAR,CAAiBW,CAAI,CAAC9F,EAAL,CAAQK,YAAzB,CACH,CAID,GAAI8J,CAAAA,CAAU,CAAGrE,CAAI,CAAC2B,aAAL,CAAmB+B,CAAnB,CAAjB,CACArK,CAAC,CAAC,IAAD,CAAD,CAAQ2H,WAAR,CAAoBqD,CAAU,CAACxC,aAA/B,EAGA7B,CAAI,CAACF,aAAL,GA7DR,CA+DH,CAvEL,EA2EA,KAAKpG,QAAL,CAAc+I,SAAd,CAAwBgB,KAAxB,CACI,UAAW,CAGP,GAAGzD,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAAC6J,aAAvB,EACCpD,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAACsK,cADxB,EAEC7D,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAAC8J,OAF3B,CAEmC,CAC/B,MACH,CAPM,GAWHvB,CAAAA,CAAU,CAAGzI,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAXV,CAYHf,CAAQ,CAAG/F,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiCwH,CAAlC,CAZT,CAcP,GAAGA,CAAU,GAAK9B,CAAI,CAACpD,OAAL,CAAaY,aAA/B,CAA6C,CACzCwC,CAAI,CAACpD,OAAL,CAAaY,aAAb,CAA6BwC,CAAI,CAACpD,OAAL,CAAaQ,cAA1C,CACAgC,CAAQ,CAAC4B,WAAT,CAAqBhB,CAAI,CAAC9F,EAAL,CAAQM,aAA7B,EACAnB,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiC0F,CAAI,CAACpD,OAAL,CAAaQ,cAA/C,CAAD,CAAgEiC,QAAhE,CAAyEW,CAAI,CAAC9F,EAAL,CAAQM,aAAjF,CACH,CAJD,IAIK,CACDnB,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiC0F,CAAI,CAACpD,OAAL,CAAaY,aAA/C,CAAD,CAA+DwD,WAA/D,CAA2EhB,CAAI,CAAC9F,EAAL,CAAQM,aAAnF,EACAwF,CAAI,CAACpD,OAAL,CAAaY,aAAb,CAA6BsE,CAA7B,CACA1C,CAAQ,CAACC,QAAT,CAAkBW,CAAI,CAAC9F,EAAL,CAAQM,aAA1B,CACH,CACDwF,CAAI,CAACsE,aAAL,GACAtE,CAAI,CAACF,aAAL,EACH,CA1BL,EA8BA,KAAKpG,QAAL,CAAcoC,WAAd,CAA0B2H,KAA1B,CAAgC,UAAU,CAGtC,GAAGzD,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAAC6J,aAAvB,EAAwCpD,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAACsK,cAA/D,EAAiF7D,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAAC8J,OAA3G,CAAmH,CAC/G,MACH,CAGDhK,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQK,YAAf,CAAD,CAA8BgK,IAA9B,CAAmC,UAAe,CAC9C,GAAIzC,CAAAA,CAAU,CAAGzI,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAAjB,CACA,MAAOH,CAAAA,CAAI,CAACpD,OAAL,CAAaa,UAAb,CAAwBqE,CAAxB,CAAP,CACAzI,CAAC,CAAC,IAAD,CAAD,CAAQ2H,WAAR,CAAoBhB,CAAI,CAAC9F,EAAL,CAAQK,YAA5B,CACH,CAJD,EAOAlB,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAf,CAAD,CAA2B2G,WAA3B,CAAuChB,CAAI,CAAC9F,EAAL,CAAQO,eAA/C,EAGAuF,CAAI,CAACpD,OAAL,CAAaY,aAAb,CAA6BwC,CAAI,CAACpD,OAAL,CAAaQ,cAA1C,CACA/D,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAf,CAAD,CAA4B0G,WAA5B,CAAwChB,CAAI,CAAC9F,EAAL,CAAQM,aAAhD,EACAnB,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiC0F,CAAI,CAACpD,OAAL,CAAaQ,cAA/C,CAAD,CAAgEiC,QAAhE,CAAyEW,CAAI,CAAC9F,EAAL,CAAQM,aAAjF,EAGAwF,CAAI,CAACF,aAAL,EACH,CAxBD,EA4BA,KAAKpG,QAAL,CAAcmC,iBAAd,CAAgC4H,KAAhC,CAAsC,UAAU,CAC5CzD,CAAI,CAACwE,eAAL,GACAxE,CAAI,CAACyE,aAAL,GACAzE,CAAI,CAAC0E,kBAAL,EACH,CAJD,CAnLJ,CA6LA,KAAKhL,QAAL,CAAcgC,mBAAd,CAAkC+H,KAAlC,CAAwC,UAAU,CAC9CzD,CAAI,CAACwE,eAAL,GACAxE,CAAI,CAAC2E,eAAL,GACA3E,CAAI,CAAC0E,kBAAL,EACH,CAJD,EAQA,KAAKhL,QAAL,CAAckC,aAAd,CAA4B6H,KAA5B,CAAkC,UAAU,CACxCzD,CAAI,CAACwE,eAAL,GACAxE,CAAI,CAAC4E,SAAL,GACA5E,CAAI,CAAC0E,kBAAL,EACH,CAJD,EAOA,KAAKhL,QAAL,CAAciC,oBAAd,CAAmC8H,KAAnC,CAAyC,UAAU,CAC/CzD,CAAI,CAACwE,eAAL,GACAxE,CAAI,CAAC6E,gBAAL,GACA7E,CAAI,CAAC0E,kBAAL,EACH,CAJD,CAKH,CArpBC,CAupBFF,eAAe,CAAE,0BAAU,CACvB,OAAO,KAAK7K,WAAZ,EACI,IAAKJ,CAAAA,CAAG,CAACK,WAAT,CACI,KAAKkL,eAAL,GACA,MACJ,IAAKvL,CAAAA,CAAG,CAAC6J,aAAT,CACI,KAAK2B,iBAAL,GACA,MACJ,IAAKxL,CAAAA,CAAG,CAAC8J,OAAT,CACI,KAAK2B,WAAL,GACA,MACJ,IAAKzL,CAAAA,CAAG,CAACsK,cAAT,CACI,KAAKoB,kBAAL,GACA,MAZR,CAcH,CAtqBC,CAwqBFP,kBAAkB,CAAE,6BAAU,CAC1B,GAAIQ,CAAAA,CAAe,CAAG7L,CAAC,CAAC,gBAAD,CAAvB,CACA,OAAO,KAAKM,WAAZ,EACI,IAAKJ,CAAAA,CAAG,CAACK,WAAT,CACI,KAAKF,QAAL,CAAcmC,iBAAd,CAAgC+D,IAAhC,CAAqC,UAArC,KACA,KAAKlG,QAAL,CAAcgC,mBAAd,CAAkCkE,IAAlC,CAAuC,UAAvC,KACA,KAAKlG,QAAL,CAAckC,aAAd,CAA4BgE,IAA5B,CAAiC,UAAjC,KACA,KAAKlG,QAAL,CAAciC,oBAAd,CAAmCiE,IAAnC,CAAwC,UAAxC,KACAsF,CAAe,CAAC/E,IAAhB,CAAqB,MAArB,CAA6B+E,CAAe,CAAC/E,IAAhB,CAAqB,eAArB,EAAwC,cAArE,EACA,MACJ,IAAK5G,CAAAA,CAAG,CAAC6J,aAAT,CACI,KAAK1J,QAAL,CAAcmC,iBAAd,CAAgC+D,IAAhC,CAAqC,UAArC,KACA,KAAKlG,QAAL,CAAcgC,mBAAd,CAAkCkE,IAAlC,CAAuC,UAAvC,KACA,KAAKlG,QAAL,CAAckC,aAAd,CAA4BgE,IAA5B,CAAiC,UAAjC,KACA,KAAKlG,QAAL,CAAciC,oBAAd,CAAmCiE,IAAnC,CAAwC,UAAxC,KACAsF,CAAe,CAAC/E,IAAhB,CAAqB,MAArB,CAA6B+E,CAAe,CAAC/E,IAAhB,CAAqB,eAArB,EAAwC,aAArE,EACA,MACJ,IAAK5G,CAAAA,CAAG,CAAC8J,OAAT,CACI,KAAK3J,QAAL,CAAcmC,iBAAd,CAAgC+D,IAAhC,CAAqC,UAArC,KACA,KAAKlG,QAAL,CAAcgC,mBAAd,CAAkCkE,IAAlC,CAAuC,UAAvC,KACA,KAAKlG,QAAL,CAAckC,aAAd,CAA4BgE,IAA5B,CAAiC,UAAjC,KACA,KAAKlG,QAAL,CAAciC,oBAAd,CAAmCiE,IAAnC,CAAwC,UAAxC,KACAsF,CAAe,CAAC/E,IAAhB,CAAqB,MAArB,CAA6B+E,CAAe,CAAC/E,IAAhB,CAAqB,eAArB,EAAwC,aAArE,EACA,MACJ,IAAK5G,CAAAA,CAAG,CAACsK,cAAT,CACI,KAAKnK,QAAL,CAAcmC,iBAAd,CAAgC+D,IAAhC,CAAqC,UAArC,KACA,KAAKlG,QAAL,CAAcgC,mBAAd,CAAkCkE,IAAlC,CAAuC,UAAvC,KACA,KAAKlG,QAAL,CAAckC,aAAd,CAA4BgE,IAA5B,CAAiC,UAAjC,KACA,KAAKlG,QAAL,CAAciC,oBAAd,CAAmCiE,IAAnC,CAAwC,UAAxC,KACAsF,CAAe,CAAC/E,IAAhB,CAAqB,MAArB,CAA6B+E,CAAe,CAAC/E,IAAhB,CAAqB,eAArB,EAAwC,kBAArE,EACA,MA5BR,CA+BH,CAzsBC,CA8sBFoD,eAAe,CAAE,yBAAS4B,CAAT,CAAwB,IACnC9E,CAAAA,CAAS,CAAG,KAAKC,cAAL,CAAoB6E,CAApB,CADuB,CAEnCC,CAAS,CAAG,KAAK1L,QAAL,CAAc6I,WAAd,CAA0B,CAA1B,CAFuB,CAIjC8C,CAAG,CAAG,EAJ2B,CAKjCC,CAAQ,CAAGF,CAAS,CAACE,QALY,CAOjCC,CAAO,CAAGC,UAAU,CAACnF,CAAS,CAACoF,QAAX,CAPa,CAQrC,GAAG,CAACC,KAAK,CAACJ,CAAD,CAAN,EAAoBA,CAAQ,CAAIC,CAAO,CAAGF,CAA7C,CAAkD,CAC9CE,CAAO,CAAGA,CAAO,CAAGF,CACvB,CAED,GAAIM,CAAAA,CAAS,CAAGH,UAAU,CAACnF,CAAS,CAACuF,UAAX,CAA1B,CACA,GAAsB,CAAnB,CAACD,CAAS,CAAEN,CAAf,CAAwB,CACpBM,CAAS,CAAGA,CAAS,CAAEN,CAC1B,CAEHD,CAAS,CAACS,WAAV,CAAsBF,CAAtB,CACAtM,CAAC,CAAC,KAAKK,QAAL,CAAc6I,WAAf,CAAD,CAA6BuD,GAA7B,CAAiC,YAAjC,EACAzM,CAAC,CAAC,KAAKK,QAAL,CAAc6I,WAAf,CAAD,CAA6BY,EAA7B,CAAgC,YAAhC,CAA6C,UAAW,CACpD,GAAI4C,CAAAA,CAAW,CAAGX,CAAS,CAACS,WAA5B,CACA,GAAGE,CAAW,EAAIR,CAAlB,CAA0B,CACtBlM,CAAC,CAAC,IAAD,CAAD,CAAQyM,GAAR,CAAY,YAAZ,EACAV,CAAS,CAACY,KAAV,EACH,CACJ,CAND,EAOEZ,CAAS,CAACa,IAAV,EACH,CAzuBC,CAmvBF3F,cAAc,CAAE,wBAAS6E,CAAT,CAAwB,CAKtC,OAFIe,CAAAA,CAAU,CAACf,CAEf,CADIQ,CAAS,CAAG,CAAC,CACjB,CAAQ7D,CAAU,CAACqD,CAAnB,CAA6C,CAAX,CAAArD,CAAlC,CAA+CA,CAAU,EAAzD,CAA4D,IACrDqE,CAAAA,CAAK,CAAG9M,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8C6B,QAA9C,CAAuD,KAAKzJ,EAAL,CAAQK,YAA/D,CAD6C,CAErD6L,CAAW,CAAE/M,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8C6B,QAA9C,CAAuD,KAAKzJ,EAAL,CAAQiC,WAA/D,CAFwC,CAKzD,GAAGgK,CAAK,EAAIC,CAAZ,CAAwB,CACpBF,CAAU,CAAGpE,CAAb,CACA,GAAG,CAACsE,CAAJ,CAAgB,CACZT,CAAS,CAAC,KAAK/I,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,EAA6C8D,UAC1D,CAFD,IAEK,CACDD,CAAS,CAAC,CAAC,CACd,CACJ,CAPD,IAOK,CACD,KACH,CACH,CAED,GAAc,CAAC,CAAZ,EAAAA,CAAH,CAAiB,CACbA,CAAS,CAAG,CAAZ,CACA,IAAI,GAAI7D,CAAAA,CAAU,CAACoE,CAAU,CAAC,CAA9B,CAA2C,CAAX,CAAApE,CAAhC,CAA6CA,CAAU,EAAvD,CAA0D,CACtD,GAAG,KAAKlF,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,CAAH,CAAgD,CAC5C6D,CAAS,CAAC,KAAK/I,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,EAA6C2D,QAAvD,CACA,KACH,CACJ,CACJ,CAMC,OAHIY,CAAAA,CAAQ,CAAClB,CAGb,CAFII,CAAO,CAAG,CAAC,CAEf,CADIe,CAAc,CAAG,KAAK1J,OAAL,CAAaQ,cAClC,CAAQ0E,CAAU,CAACqD,CAAnB,CAAkCrD,CAAU,EAAEwE,CAA9C,CAA6DxE,CAAU,EAAvE,CAA0E,IAClEqE,CAAAA,CAAK,CAAG9M,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8C6B,QAA9C,CAAuD,KAAKzJ,EAAL,CAAQK,YAA/D,CAD0D,CAElE6L,CAAW,CAAE/M,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8C6B,QAA9C,CAAuD,KAAKzJ,EAAL,CAAQiC,WAA/D,CAFqD,CAItE,GAAGgK,CAAK,EAAIC,CAAZ,CAAwB,CACpBC,CAAQ,CAAGvE,CAAX,CACA,GAAG,CAACsE,CAAJ,CAAgB,CACZb,CAAO,CAAC,KAAK3I,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,EAA6C2D,QACxD,CAFD,IAEK,CACDF,CAAO,CAAC,CAAC,CACZ,CACJ,CAPD,IAOK,CACD,KACH,CACJ,CAED,GAAY,CAAC,CAAV,EAAAA,CAAH,CAAe,CACXA,CAAO,CAAG,KAAK3I,OAAL,CAAaI,YAAvB,CACA,IAAI,GAAI8E,CAAAA,CAAU,CAACuE,CAAQ,CAAC,CAA5B,CAA8BvE,CAAU,EAAEwE,CAA1C,CAAyDxE,CAAU,EAAnE,CAAsE,CAClE,GAAG,KAAKlF,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,CAAH,CAAgD,CAC5CyD,CAAO,CAAC,KAAK3I,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,EAA6C8D,UAArD,CACA,KACH,CACJ,CACJ,CACD,GAAIvF,CAAAA,CAAS,CAAG,CACNG,SADM,CACI0F,CADJ,CAENzF,OAFM,CAEE6C,QAAQ,CAAC+C,CAAD,CAFV,CAGNT,UAHM,CAGKD,CAHL,CAINF,QAJM,CAIGnC,QAAQ,CAACiC,CAAD,CAJX,CAAhB,CAQA,MAAOlF,CAAAA,CAEV,CA1zBC,CA6zBFkG,uBAAuB,CAAE,kCAAU,CAC/B,GAAIvG,CAAAA,CAAI,CAAE,IAAV,CACA,GAAG,KAAKpD,OAAL,CAAagC,cAAhB,CAA+B,CAC3B,GAAI4H,CAAAA,CAAS,CAAC,CAAd,CACAnN,CAAC,CAACkL,IAAF,CAAO,KAAK3H,OAAL,CAAagC,cAApB,CAAmC,SAAS6H,CAAT,CAAqB,CACpD,GAAIC,CAAAA,CAAc,CAAGD,CAAK,CAAGD,CAAR,CAAoB,CAAzC,CACA,GAAkB,CAAf,CAAAE,CAAH,CAAoB,CAChB,IAAI,GAAIC,CAAAA,CAAS,CAAE,CAAf,CACI7E,CADR,CAAqB6E,CAAS,CAACD,CAAc,CAAC,CAA9C,CAAiDC,CAAS,EAA1D,CAA6D,CACrD7E,CADqD,CACxC0E,CAAS,CAAGG,CAD4B,CAEzDtN,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8CzC,QAA9C,CAAuDW,CAAI,CAAC9F,EAAL,CAAQiC,WAA/D,CACH,CACJ,CACDqK,CAAS,CAAGlD,QAAQ,CAACmD,CAAD,CACvB,CATD,EAYA,IAAI,GAAIE,CAAAA,CAAS,CAAEH,CAAS,CAAC,CAAzB,CACI1E,CADR,CAA+B6E,CAAS,EAAE,KAAK/J,OAAL,CAAaY,aAAvD,CAAsEmJ,CAAS,EAA/E,CAAkF,CAC1E7E,CAD0E,CAC7D6E,CAD6D,CAE9EtN,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8CzC,QAA9C,CAAuDW,CAAI,CAAC9F,EAAL,CAAQiC,WAA/D,CACH,CACJ,CAEJ,CAn1BC,CAs1BF2E,wBAAwB,CAAE,mCAAU,CAChC,GAAId,CAAAA,CAAI,CAAE,IAAV,CACA3G,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgC,KAAKH,EAAL,CAAQiC,WAAzC,CAAD,CAAuDoI,IAAvD,CAA4D,UAAe,CACnE,GAAIzC,CAAAA,CAAU,CAAGwB,QAAQ,CAACjK,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAAD,CAAzB,CAEA,GAAIH,CAAI,CAACrG,WAAL,GAAmBJ,CAAG,CAAC6J,aAAvB,EAAwC/J,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,EAAiCyH,CAAU,CAAG,CAA9C,CAAD,CAAD,CAAoD6B,QAApD,CAA6D3D,CAAI,CAAC9F,EAAL,CAAQK,YAArE,CAAxC,EACAlB,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,EAAiCyH,CAAU,CAAG,CAA9C,CAAD,CAAD,CAAoD6B,QAApD,CAA6D3D,CAAI,CAAC9F,EAAL,CAAQiC,WAArE,CADJ,CACuF,CACnF9C,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiCwH,CAAlC,CAAD,CAA+CzC,QAA/C,CAAwDW,CAAI,CAAC9F,EAAL,CAAQiC,WAAhE,CACH,CACR,CAPD,CAQH,CAh2BC,CAw2BFwI,eAAe,CAAE,0BAAU,CACZ,IADY,CAIvB,KAAK4B,uBAAL,GAGA,KAAKzF,wBAAL,GAGA,KAAKpH,QAAL,CAAc0C,gBAAd,CAA+BiD,QAA/B,CAAwC,KAAKnF,EAAL,CAAQ6B,aAAhD,EACA,KAAKpC,WAAL,CAAiB,WACpB,CAp3BC,CAs3BFoL,iBAAiB,CAAE,4BAAU,CACzB,KAAKrL,QAAL,CAAc0C,gBAAd,CAA+B4E,WAA/B,CAA2C,KAAK9G,EAAL,CAAQ6B,aAAnD,EACA1C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAf,CAAD,CAA2B2G,WAA3B,CAAuC,KAAK9G,EAAL,CAAQiC,WAA/C,EACA9C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQI,UAAf,CAAD,CAA4B0G,WAA5B,CAAwC,KAAK9G,EAAL,CAAQiC,WAAhD,EACA9C,CAAC,CAAC,KAAKK,QAAL,CAAc6I,WAAf,CAAD,CAA6BuD,GAA7B,CAAiC,YAAjC,EACAtM,CAAa,CAAC8E,MAAd,EACH,CA53BC,CAm4BFsG,SAAS,CAAE,oBAAU,CACN,IADM,CAIjB,KAAK2B,uBAAL,GAGA,KAAKzF,wBAAL,GAGA,KAAKpH,QAAL,CAAc0C,gBAAd,CAA+BiD,QAA/B,CAAwC,KAAKnF,EAAL,CAAQ8B,OAAhD,EACA,KAAKrC,WAAL,CAAiBJ,CAAG,CAAC8J,OACxB,CA/4BC,CAi5BF2B,WAAW,CAAE,sBAAU,CACnB,KAAKtL,QAAL,CAAc0C,gBAAd,CAA+B4E,WAA/B,CAA2C,KAAK9G,EAAL,CAAQ8B,OAAnD,EACA3C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAf,CAAD,CAA2B2G,WAA3B,CAAuC,KAAK9G,EAAL,CAAQiC,WAA/C,EACA9C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQI,UAAf,CAAD,CAA4B0G,WAA5B,CAAwC,KAAK9G,EAAL,CAAQiC,WAAhD,EACA9C,CAAC,CAAC,KAAKK,QAAL,CAAc6I,WAAf,CAAD,CAA6BuD,GAA7B,CAAiC,YAAjC,EACAtM,CAAa,CAAC8E,MAAd,EACH,CAv5BC,CA45BFuG,gBAAgB,CAAE,2BAAU,CACxB,GAAI7E,CAAAA,CAAI,CAAG,IAAX,CAEA,GAAG,KAAKpD,OAAL,CAAagC,cAAhB,CAA+B,CAC3B,GAAI4H,CAAAA,CAAS,CAAC,CAAd,CACAnN,CAAC,CAACkL,IAAF,CAAO,KAAK3H,OAAL,CAAagC,cAApB,CAAmC,SAAS6H,CAAT,CAAqB,CACpD,GAAIC,CAAAA,CAAc,CAAGD,CAAK,CAAGD,CAAR,CAAoB,CAAzC,CACA,GAAkB,CAAf,CAAAE,CAAH,CAAoB,CAChB,IAAI,GAAIC,CAAAA,CAAS,CAAE,CAAf,CACI7E,CADR,CAAqB6E,CAAS,CAACD,CAAc,CAAC,CAA9C,CAAiDC,CAAS,EAA1D,CAA6D,CACrD7E,CADqD,CACxC0E,CAAS,CAAGG,CAD4B,CAEzDtN,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8CzC,QAA9C,CAAuDW,CAAI,CAAC9F,EAAL,CAAQiC,WAA/D,CACH,CACJ,CACDqK,CAAS,CAAGlD,QAAQ,CAACmD,CAAD,CACvB,CATD,EAYA,IAAI,GAAIE,CAAAA,CAAS,CAAEH,CAAS,CAAC,CAAzB,CACI1E,CADR,CAA+B6E,CAAS,EAAE,KAAK/J,OAAL,CAAaY,aAAvD,CAAsEmJ,CAAS,EAA/E,CAAkF,CAC1E7E,CAD0E,CAC7D6E,CAD6D,CAE9EtN,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8CzC,QAA9C,CAAuDW,CAAI,CAAC9F,EAAL,CAAQiC,WAA/D,CACH,CACJ,CAGD9C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQiC,WAAf,CAAD,CAA6BoI,IAA7B,CAAkC,UAAe,CAC7C,GAAIzC,CAAAA,CAAU,CAAGwB,QAAQ,CAACjK,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAAD,CAAzB,CAEA,GAAG9G,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,EAAiCyH,CAAU,CAAG,CAA9C,CAAD,CAAD,CAAoD6B,QAApD,CAA6D3D,CAAI,CAAC9F,EAAL,CAAQiC,WAArE,CAAH,CAAqF,CACjF9C,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiCwH,CAAlC,CAAD,CAA+CzC,QAA/C,CAAwDW,CAAI,CAAC9F,EAAL,CAAQiC,WAAhE,CACH,CACJ,CAND,EAQA,KAAKzC,QAAL,CAAc0C,gBAAd,CAA+BiD,QAA/B,CAAwC,KAAKnF,EAAL,CAAQ+B,cAAhD,EACA,KAAKtC,WAAL,CAAiBJ,CAAG,CAACsK,cACxB,CA97BC,CAg8BFoB,kBAAkB,CAAE,6BAAU,CAC1B,KAAKvL,QAAL,CAAc0C,gBAAd,CAA+B4E,WAA/B,CAA2C,KAAK9G,EAAL,CAAQ+B,cAAnD,EACA5C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAf,CAAD,CAA2B2G,WAA3B,CAAuC,KAAK9G,EAAL,CAAQiC,WAA/C,EACA9C,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQI,UAAf,CAAD,CAA4B0G,WAA5B,CAAwC,KAAK9G,EAAL,CAAQiC,WAAhD,EACA3C,CAAa,CAAC8E,MAAd,EACH,CAr8BC,CAu8BFmG,aAAa,CAAE,wBAAU,CACrB,KAAK/K,QAAL,CAAc0C,gBAAd,CAA+BiD,QAA/B,CAAwC,KAAKnF,EAAL,CAAQgC,WAAhD,EACA,KAAKvC,WAAL,CAAiBJ,CAAG,CAACK,WACxB,CA18BC,CA48BFkL,eAAe,CAAE,0BAAU,CACvB,KAAKpL,QAAL,CAAc0C,gBAAd,CAA+B4E,WAA/B,CAA2C,KAAK9G,EAAL,CAAQgC,WAAnD,CACH,CA98BC,CAo9BF6H,oBAAoB,CAAE,8BAAS6C,CAAT,CAAoB,CAEtC,GAAIC,CAAAA,CAAgB,CAAE,KAAKjK,OAAL,CAAakC,eAAb,CAA6BJ,MAAnD,CACA,GAAqB,CAAlB,EAAAmI,CAAH,CAAuB,CAAC,MAAO,EAAI,CAInC,OADIX,CAAAA,CAAU,CAAC,CAAC,CAChB,CAAQpE,CAAU,CAAC8E,CAAnB,CAEQR,CAFR,CAAyC,CAAX,CAAAtE,CAA9B,CAA2CA,CAAU,EAArD,CAAwD,CAEhDsE,CAFgD,CAEnC/M,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8C6B,QAA9C,CAAuD,KAAKzJ,EAAL,CAAQiC,WAA/D,CAFmC,CAIpD,GAAG,CAACiK,CAAJ,CAAgB,CACZF,CAAU,CAAC,KAAKtJ,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,EAA6CgF,SAA7C,CAAuD,CAAlE,CACA,KACH,CACJ,CAID,OADIT,CAAAA,CAAQ,CAAC,CAAC,CACd,CAAQvE,CAAU,CAAC8E,CAAnB,CAEQR,CAFR,CAA8BtE,CAAU,EAAE+E,CAA1C,CAA2D/E,CAAU,EAArE,CAAwE,CAEhEsE,CAFgE,CAEnD/M,CAAC,CAAC,IAAM,KAAKa,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCyH,CAAjC,CAAD,CAA8C6B,QAA9C,CAAuD,KAAKzJ,EAAL,CAAQiC,WAA/D,CAFmD,CAIpE,GAAG,CAACiK,CAAJ,CAAgB,CACZC,CAAQ,CAAC,KAAKzJ,OAAL,CAAagC,cAAb,CAA4B,GAAKkD,CAAjC,EAA6CgF,SAA7C,CAAuD,CAAhE,CACA,KACH,CACJ,CAGD,GAAe,CAAC,CAAb,EAAAZ,CAAH,CAAkB,CAACA,CAAU,CAAC,CAAG,CAEjC,GAAGG,CAAQ,EAAEQ,CAAb,CAA8B,CACtBR,CAAQ,CAAC,CAAC,CAGjB,CAJD,IAIM,IAAa,CAAV,EAAAA,CAAQ,EAAOA,CAAQ,CAAGH,CAA7B,CAAwC,CAC1C,QACH,CAKDA,CAAU,GAGV,GAAKa,CAAAA,CAAG,GAAR,CACA,GAAY,CAAT,CAAAV,CAAH,CAAe,CACbU,CAAG,CAAG,KAAKnK,OAAL,CAAakC,eAAb,CAA6BkI,KAA7B,CAAmCd,CAAnC,CAA+CG,CAA/C,EAAyDY,IAAzD,CAA8D,GAA9D,CACP,CAFD,IAEK,CACHF,CAAG,CAAG,KAAKnK,OAAL,CAAakC,eAAb,CAA6BkI,KAA7B,CAAmCd,CAAnC,EAA+Ce,IAA/C,CAAoD,GAApD,CACP,CACD,GAAe,EAAZ,EAAAF,CAAG,CAACG,IAAJ,EAAH,CAAkB,CACd,QACH,CAFD,IAEK,CACD,MAAOH,CAAAA,CACV,CACJ,CA7gCC,CAghCFI,QAAQ,CAAE,mBAAU,CAChB,GAAI5H,CAAAA,CAAC,CAAG,IAAR,CACAA,CAAC,CAAC7F,QAAF,CAAW4I,UAAX,CAAsBnC,IAAtB,CAA2B,KAA3B,CAAiCiH,CAAC,CAACC,GAAF,CAAMC,OAAN,CAAgB,GAAhB,CAAsB/N,CAAG,CAACgO,aAA1B,CAA2C,eAA3C,CAA6DC,kBAAkB,CAACnO,CAAC,CAAC,IAAD,CAAD,CAAQwH,IAAR,EAAD,CAA/E,CAC3B,QAD2B,CAChBtB,CAAC,CAAC3C,OAAF,CAAUG,WADM,CACQ,KADR,CACgBwC,CAAC,CAAC3C,OAAF,CAAUc,UAD3D,EAEA6B,CAAC,CAAC7F,QAAF,CAAW4I,UAAX,CAAsB,CAAtB,EAAyB0D,KAAzB,GACAzG,CAAC,CAAC7F,QAAF,CAAW4I,UAAX,CAAsB,CAAtB,EAAyBmF,IAAzB,GACAlI,CAAC,CAAC7F,QAAF,CAAW4I,UAAX,CAAsB,CAAtB,EAAyB2D,IAAzB,EACH,CAvhCC,CAyhCF9G,gBAAgB,CAAE,2BAAU,CACxB,GAAII,CAAAA,CAAC,CAAG,IAAR,CACA,KAAK+E,aAAL,GAEA,GAAG,KAAK1H,OAAL,CAAa4B,UAAb,GAA0B,KAAK3E,SAAL,CAAeI,qBAA5C,CAAmE,CAE/DZ,CAAC,CAACkL,IAAF,CAAOhF,CAAC,CAAC3C,OAAF,CAAUa,UAAjB,CAA6B,SAAUgJ,CAAV,CAAiB,CACtC,GAAI/F,CAAAA,CAAO,CAAGrH,CAAC,CAAC,IAAMkG,CAAC,CAACrF,EAAF,CAAKG,SAAX,CAAuB,GAAvB,CAA6BkF,CAAC,CAAC3C,OAAF,CAAUa,UAAV,CAAqBgJ,CAArB,EAA4B3E,UAA1D,CAAf,CACApB,CAAO,CAACrB,QAAR,CAAiBE,CAAC,CAACrF,EAAF,CAAKK,YAAtB,EACA,GAAI0H,CAAAA,CAAS,CAAG1C,CAAC,CAACoC,aAAF,CAAgBpC,CAAC,CAAC3C,OAAF,CAAUa,UAAV,CAAqBgJ,CAArB,EAA4BnF,GAA5C,CAAhB,CACAZ,CAAO,CAACrB,QAAR,CAAiB4C,CAAS,CAACL,UAA3B,EAEA,GAAIM,CAAAA,CAAQ,CAAI3C,CAAC,CAACgC,WAAF,CAAchC,CAAC,CAAC3C,OAAF,CAAUa,UAAV,CAAqBgJ,CAArB,EAA4BnF,GAA1C,CAAhB,CACA,GAAGY,CAAH,CAAY,CACRxB,CAAO,CAACP,IAAR,CAAa,eAAb,CAA6B+B,CAA7B,CACH,CACJ,CAVL,EAcA7I,CAAC,CAACkL,IAAF,CAAOhF,CAAC,CAAC3C,OAAF,CAAU+B,eAAjB,CAAkC,SAAU8H,CAAV,CAAiB,IACvCxE,CAAAA,CAAS,CAAG1C,CAAC,CAACoC,aAAF,CAAgBpC,CAAC,CAAC3C,OAAF,CAAU+B,eAAV,CAA0B8H,CAA1B,EAAiCnF,GAAjD,CAD2B,CAEvCY,CAAQ,CAAI3C,CAAC,CAACgC,WAAF,CAAchC,CAAC,CAAC3C,OAAF,CAAU+B,eAAV,CAA0B8H,CAA1B,EAAiCnF,GAA/C,CAF2B,CAGvCZ,CAAO,CAAIrH,CAAC,CAAC,IAAMkG,CAAC,CAACrF,EAAF,CAAKG,SAAX,CAAuB,GAAvB,CAA6BkF,CAAC,CAAC3C,OAAF,CAAU+B,eAAV,CAA0B8H,CAA1B,EAAiC3E,UAA/D,CAH2B,CAI3CpB,CAAO,CAACrB,QAAR,CAAiBE,CAAC,CAACrF,EAAF,CAAKoC,sBAAtB,EACAoE,CAAO,CAACrB,QAAR,CAAiB4C,CAAS,CAACL,UAA3B,EACA,GAAGM,CAAH,CAAY,CACRxB,CAAO,CAACP,IAAR,CAAa,eAAb,CAA6B+B,CAA7B,CACH,CACJ,CATL,EAkBA,KAAKxI,QAAL,CAAcwJ,KAAd,CAAoBrD,GAApB,CAAwB,KAAKnG,QAAL,CAAc8B,gBAAd,CAA+BqE,GAA/B,EAAxB,EAGA,OAAO,KAAKlG,WAAZ,EACI,IAAKJ,CAAAA,CAAG,CAACK,WAAT,CAGI,MAEJ,IAAKL,CAAAA,CAAG,CAAC6J,aAAT,CACI,KAAKuB,eAAL,GACA,MAEJ,IAAKpL,CAAAA,CAAG,CAACsK,cAAT,CACI,KAAKgB,gBAAL,GACA,MAEJ,IAAKtL,CAAAA,CAAG,CAAC8J,OAAT,CACI,KAAKuB,SAAL,GACA,MAhBR,CAoBH,CAIJ,CA1lCC,CA4lCFjE,cAAc,CAAE,wBAAS+G,CAAT,CAAoB5F,CAApB,CAA+B6F,CAA/B,CAAqCrG,CAArC,CAA0C,CACtD,OAAOoG,CAAP,EACI,IAAKnO,CAAAA,CAAG,CAACqH,UAAT,CACI,KAAKhE,OAAL,CAAaa,UAAb,CAAwBqE,CAAxB,EAAsC,CAAC6F,IAAI,CAAEA,CAAP,CAAa7F,UAAU,CAAEA,CAAzB,CAAqCR,GAAG,CAAEA,CAA1C,CAAtC,CACA,GAAGQ,CAAU,GAAI,MAAKlF,OAAL,CAAa+B,eAA9B,CAA+C,CAC3C,MAAO,MAAK/B,OAAL,CAAa+B,eAAb,CAA6BmD,CAA7B,CACV,CACD,MAEJ,IAAKvI,CAAAA,CAAG,CAAC4I,gBAAT,CACI,KAAKvF,OAAL,CAAa+B,eAAb,CAA6BmD,CAA7B,EAA2C,CAAC6F,IAAI,CAAEA,CAAP,CAAa7F,UAAU,CAAEA,CAAzB,CAAqCR,GAAG,CAAEA,CAA1C,CAA3C,CACA,GAAGQ,CAAU,GAAI,MAAKlF,OAAL,CAAaa,UAA9B,CAA0C,CACtC,MAAO,MAAKb,OAAL,CAAaa,UAAb,CAAwBqE,CAAxB,CACV,CACD,MAEJ,IAAKvI,CAAAA,CAAG,CAAC6I,YAAT,CACI,GAAGN,CAAU,GAAI,MAAKlF,OAAL,CAAaa,UAA9B,CAA0C,CACtC,MAAO,MAAKb,OAAL,CAAaa,UAAb,CAAwBqE,CAAxB,CACV,CACD,GAAGA,CAAU,GAAI,MAAKlF,OAAL,CAAa+B,eAA9B,CAA+C,CAC3C,MAAO,MAAK/B,OAAL,CAAa+B,eAAb,CAA6BmD,CAA7B,CACV,CArBT,CA0BH,CAvnCC,CAwnCF8F,WAAW,CAAE,sBAAW,IAChBrI,CAAAA,CAAC,CAAG,IADY,CAEhBuC,CAAU,CAAGzI,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAFG,CAGhBO,CAAO,CAAGrH,CAAC,CAAC,IAAD,CAAD,CAAQwH,IAAR,EAHM,CAMpB,GAAGtB,CAAC,CAAC3C,OAAF,CAAUO,aAAV,EAA2B,CAAO2E,CAAP,EAA0BvC,CAAC,CAAC3C,OAAF,CAAUY,aAAlE,CAAiF,CAC7E,MACH,CAED,GAAGsE,CAAU,GAAIvC,CAAAA,CAAC,CAAC3C,OAAF,CAAUa,UAA3B,CAAsC,CAClC,MAAO8B,CAAAA,CAAC,CAAC3C,OAAF,CAAUa,UAAV,CAAqBqE,CAArB,CAAP,CACAzI,CAAC,CAAC,IAAD,CAAD,CAAQ2H,WAAR,CAAoBzB,CAAC,CAACrF,EAAF,CAAKK,YAAzB,CACH,CAHD,IAGK,CACDgF,CAAC,CAACoB,cAAF,CAAiBpH,CAAG,CAACqH,UAArB,CAAgCkB,CAAhC,CAA2CpB,CAA3C,CAVS,EAUT,EACArH,CAAC,CAAC,IAAD,CAAD,CAAQgG,QAAR,CAAiBE,CAAC,CAACrF,EAAF,CAAKK,YAAtB,CACH,CACDgF,CAAC,CAACO,aAAF,EACH,CA1oCC,CA4oCF+H,YAAY,CAAE,uBAAW,IAGjBtI,CAAAA,CAAC,CAAG,IAHa,CAIjBuC,CAAU,CAAGzI,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CAJI,CAKjBf,CAAQ,CAAG/F,CAAC,CAAC,IAAMkG,CAAC,CAACrF,EAAF,CAAKI,UAAX,CAAwB,GAAxB,CAA8BwH,CAA/B,CALK,CAOrB,GAAGA,CAAU,EAAIvC,CAAC,CAAC3C,OAAF,CAAUY,aAA3B,CAAyC,CACrC+B,CAAC,CAAC3C,OAAF,CAAUY,aAAV,CAA0B+B,CAAC,CAAC3C,OAAF,CAAUQ,cAApC,CACAgC,CAAQ,CAAC4B,WAAT,CAAqBzB,CAAC,CAACrF,EAAF,CAAKM,aAA1B,EACAnB,CAAC,CAAC,IAAMkG,CAAC,CAACrF,EAAF,CAAKI,UAAX,CAAwB,GAAxB,CAA8BiF,CAAC,CAAC3C,OAAF,CAAUQ,cAAzC,CAAD,CAA0DiC,QAA1D,CAAmEE,CAAC,CAACrF,EAAF,CAAKM,aAAxE,CACH,CAJD,IAIK,CACDnB,CAAC,CAAC,IAAMkG,CAAC,CAACrF,EAAF,CAAKI,UAAX,CAAwB,GAAxB,CAA8BiF,CAAC,CAAC3C,OAAF,CAAUY,aAAzC,CAAD,CAAyDwD,WAAzD,CAAqEzB,CAAC,CAACrF,EAAF,CAAKM,aAA1E,EACA+E,CAAC,CAAC3C,OAAF,CAAUY,aAAV,CAA0BsE,CAA1B,CACA1C,CAAQ,CAACC,QAAT,CAAkBE,CAAC,CAACrF,EAAF,CAAKM,aAAvB,CACH,CACD+E,CAAC,CAAC+E,aAAF,GACA/E,CAAC,CAACO,aAAF,EACH,CA9pCC,CAgqCFgI,wBAAwB,CAAE,mCAAU,CAChC,GAAI9H,CAAAA,CAAI,CAAE,IAAV,CACA,GAAG,KAAKpD,OAAL,CAAagC,cAAhB,CAA+B,CAC3B,GAAI4H,CAAAA,CAAS,GAAb,CAEAnN,CAAC,CAACkL,IAAF,CAAO,KAAK3H,OAAL,CAAagC,cAApB,CAAmC,SAAS6H,CAAT,CAAesB,CAAf,CAAqB,IAEhDC,CAAAA,CAAS,GAFuC,CAIpD,GAAGxB,CAAH,CAAa,CAET,GAA2C,CAAxC,CAAAuB,CAAK,CAACjB,SAAN,CAAkBN,CAAS,CAACM,SAA/B,CAA6C,CAGzC,GAA4C,CAAzC,EAAAiB,CAAK,CAACE,SAAN,CAAkBzB,CAAS,CAACyB,SAA/B,CAA8C,CAC1C,GAAGzB,CAAS,CAAC0B,cAAV,CAAyB,UAAzB,GAA6D,CAArB,GAAA1B,CAAS,CAAC2B,QAArD,CAAmE,CAC/DH,CAAS,GACZ,CAFD,IAEK,CACDA,CAAS,GACZ,CACJ,CACJ,CACJ,CAbD,IAaM,IAAG,KAAAxB,CAAH,CAAsB,CAExB,GAAGuB,CAAK,CAACE,SAAN,CAAgBF,CAAK,CAACjB,SAAzB,CAAmC,CAG/B,GAAoB,CAAjB,EAAAiB,CAAK,CAACE,SAAT,CAAsB,CAClBD,CAAS,GACZ,CACJ,CACJ,CAED,GAAGA,CAAH,CAAa,CACT3O,CAAC,CAAC,IAAM2G,CAAI,CAAC9F,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgC0N,CAAK,CAACE,SAAvC,CAAD,CAAmD5I,QAAnD,CAA4DW,CAAI,CAAC9F,EAAL,CAAQmC,2BAApE,CACH,CACDmK,CAAS,CAAEuB,CACd,CAhCD,CAiCH,CACJ,CAvsCC,CAysCFzD,aAAa,CAAE,wBAAU,CACrB,GAAI/E,CAAAA,CAAC,CAAG,IAAR,CACAA,CAAC,CAAC7F,QAAF,CAAW8I,QAAX,CAAoB+B,IAApB,CAAyB,UAAe,IAChCzC,CAAAA,CAAU,CAAGzI,CAAC,CAAC,IAAD,CAAD,CAAQ8G,IAAR,CAAa,iBAAb,CADmB,CAEhCf,CAAQ,CAAG/F,CAAC,CAAC,IAAMkG,CAAC,CAACrF,EAAF,CAAKI,UAAX,CAAwB,GAAxB,CAA8BwH,CAA/B,CAFoB,CAIpC,GAAG,CAAOA,CAAP,EAA0BvC,CAAC,CAAC3C,OAAF,CAAUY,aAAvC,CAAsD,CAClDnE,CAAC,CAAC,IAAD,CAAD,CAAQgG,QAAR,CAAiBE,CAAC,CAACrF,EAAF,CAAKO,eAAtB,EACA2E,CAAQ,CAACC,QAAT,CAAkBE,CAAC,CAACrF,EAAF,CAAKQ,gBAAvB,EAGA,GAAG6E,CAAC,CAAC3C,OAAF,CAAUO,aAAV,EAA2B2E,CAAU,GAAIvC,CAAAA,CAAC,CAAC3C,OAAF,CAAUa,UAAtD,CAAiE,CAC7D,MAAO8B,CAAAA,CAAC,CAAC3C,OAAF,CAAUa,UAAV,CAAqBqE,CAArB,CAAP,CACAzI,CAAC,CAAC,IAAD,CAAD,CAAQ2H,WAAR,CAAoBzB,CAAC,CAACrF,EAAF,CAAKK,YAAzB,CACH,CACJ,CATD,IASK,CACDlB,CAAC,CAAC,IAAD,CAAD,CAAQ2H,WAAR,CAAoBzB,CAAC,CAACrF,EAAF,CAAKO,eAAzB,EACA2E,CAAQ,CAAC4B,WAAT,CAAqBzB,CAAC,CAACrF,EAAF,CAAKQ,gBAA1B,CACH,CACJ,CAjBD,CAkBH,CA7tCC,CA8tCFoF,aAAa,CAAE,wBAAU,IACjBP,CAAAA,CAAC,CAAG,IADa,CAEjB6I,CAAU,CAAGlE,MAAM,CAACC,IAAP,CAAY5E,CAAC,CAAC3C,OAAF,CAAUa,UAAtB,EAAkCiB,MAF9B,CAGrBa,CAAC,CAAC7F,QAAF,CAAWqJ,aAAX,CAAyBlC,IAAzB,CAA8BuH,CAA9B,EAHqB,GAKjBC,CAAAA,CAAoB,CAAGnE,MAAM,CAACC,IAAP,CAAY5E,CAAC,CAAC3C,OAAF,CAAU+B,eAAtB,EAAuCD,MAL7C,CAUjB4J,CAAQ,CAAC,CAVQ,CAWrB,GAA4B,CAAzB,CAAA/I,CAAC,CAAC3C,OAAF,CAAUI,YAAb,CAA8B,CAC1BsL,CAAQ,CAAG5I,IAAI,CAACC,KAAL,CAAoD,EAAzC,EAACJ,CAAC,CAAC3C,OAAF,CAAUY,aAAV,CAA0B4K,CAA3B,EAA8C7I,CAAC,CAAC3C,OAAF,CAAUI,YAAnE,CACd,CACDuC,CAAC,CAAC3C,OAAF,CAAUS,GAAV,CAAgBiL,CAAhB,CACA/I,CAAC,CAAC7F,QAAF,CAAWkJ,WAAX,CAAuB/B,IAAvB,CAA4ByH,CAA5B,EAGA,GAAIC,CAAAA,CAAa,CAAC,CAAlB,CACA,GAA2B,CAAxB,CAAAhJ,CAAC,CAAC3C,OAAF,CAAUY,aAAb,CAA8B,CAC1B+K,CAAa,CAAG7I,IAAI,CAACC,KAAL,CAA8E,GAAnE,GAACJ,CAAC,CAAC3C,OAAF,CAAUY,aAAV,CAA0B4K,CAA3B,EAAyC7I,CAAC,CAAC3C,OAAF,CAAUY,aAAnD,CAAX,CACnB,CACD+B,CAAC,CAAC3C,OAAF,CAAUU,QAAV,CAAqBiL,CAArB,CACAhJ,CAAC,CAAC7F,QAAF,CAAWmJ,gBAAX,CAA4BhC,IAA5B,CAAiC0H,CAAjC,EAGA,GAAIC,CAAAA,CAAW,CAAGF,CAAlB,CACA,GAAGE,CAAW,CAAGjJ,CAAC,CAAC3C,OAAF,CAAUE,SAA3B,CAAqC,CACjC0L,CAAW,CAAGjJ,CAAC,CAAC3C,OAAF,CAAUE,SAC3B,CACD,GAAIS,CAAAA,CAAY,CAAGmC,IAAI,CAACC,KAAL,CAA6C,GAAlC,EAAA6I,CAAW,CAACjJ,CAAC,CAAC3C,OAAF,CAAUE,SAAtB,CAAX,CAAnB,CACAyC,CAAC,CAAC7F,QAAF,CAAWoJ,eAAX,CAA2BjC,IAA3B,CAAgCtD,CAAhC,EAGA,GAAIkL,CAAAA,CAAc,CAAC,EAAnB,CACA,GAAgB,CAAb,CAAAL,CAAU,EAAkC,CAA1B,CAAA7I,CAAC,CAAC3C,OAAF,CAAUY,aAA/B,CAAkD,CAC9CiL,CAAc,CAAG,KAAO/I,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAAC3C,OAAF,CAAUY,aAAV,CAA0B4K,CAArC,CAC3B,CAFD,IAEM,IAA6B,CAA1B,CAAA7I,CAAC,CAAC3C,OAAF,CAAUY,aAAb,CAA+B,CACjCiL,CAAc,CAAI,KAAOlJ,CAAC,CAAC3C,OAAF,CAAUY,aACtC,CAFK,IAED,CACDiL,CAAc,CAAI,KACrB,CACDlJ,CAAC,CAAC3C,OAAF,CAAU8L,SAAV,CAAsBD,CAAtB,CACAlJ,CAAC,CAAC7F,QAAF,CAAWsJ,YAAX,CAAwBnC,IAAxB,CAA6B4H,CAA7B,EAGA,GAAIE,CAAAA,CAAW,CAAC,EAAhB,CACA,GAAgB,CAAb,CAAAP,CAAU,EAA+B,CAAvB,CAAAC,CAArB,CAA+C,CAC3CM,CAAW,CAAG,KAAOjJ,IAAI,CAACC,KAAL,CAAW,CAACyI,CAAU,CAAGC,CAAd,EAAsCA,CAAjD,CACxB,CAFD,IAEM,IAAgB,CAAb,CAAAD,CAAH,CAAkB,CACpBO,CAAW,CAAI,KAAOP,CACzB,CAFK,IAED,CACDO,CAAW,CAAI,KAClB,CACDpJ,CAAC,CAAC3C,OAAF,CAAUgM,MAAV,CAAmBD,CAAnB,CACApJ,CAAC,CAAC7F,QAAF,CAAWuJ,SAAX,CAAqBpC,IAArB,CAA0B8H,CAA1B,EAGApJ,CAAC,CAAC7F,QAAF,CAAWuB,mBAAX,CAA+B4E,GAA/B,CAAmCyI,CAAnC,EACA/I,CAAC,CAAC7F,QAAF,CAAWyB,uBAAX,CAAmC0E,GAAnC,CAAuCtC,CAAvC,EACAgC,CAAC,CAAC7F,QAAF,CAAWwB,mBAAX,CAA+B2E,GAA/B,CAAmC0I,CAAnC,EACAhJ,CAAC,CAAC7F,QAAF,CAAW0B,kBAAX,CAA8ByE,GAA9B,CAAkCN,CAAC,CAAC3C,OAAF,CAAUY,aAA5C,EACA+B,CAAC,CAAC7F,QAAF,CAAW4B,iBAAX,CAA6BuE,GAA7B,CAAiC1B,IAAI,CAAC0K,SAAL,CAAetJ,CAAC,CAAC3C,OAAF,CAAUa,UAAzB,CAAjC,EACA8B,CAAC,CAAC7F,QAAF,CAAW6B,0BAAX,CAAsCsE,GAAtC,CAA0C1B,IAAI,CAAC0K,SAAL,CAAetJ,CAAC,CAAC3C,OAAF,CAAU+B,eAAzB,CAA1C,CAEH,CA/xCC,CAkyCT,CAvyCK,CAAN","sourcesContent":["define(['jquery','core/log','mod_poodlltime/definitions','mod_poodlltime/popoverhelper'], function($,log,def,popoverhelper) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Gradenow helper: initialising');\n\n    return{\n        //controls\n\n        controls: {},\n        currentmode: def.modegrading,\n\n        constants: {\n          REVIEWMODE_NONE: 0,\n          REVIEWMODE_MACHINE: 1,\n          REVIEWMODE_HUMAN: 2,\n          REVIEWMODE_SCORESONLY: 3\n        },\n\n        //class definitions\n        cd: {\n\n            audioplayerclass: def.audioplayerclass,\n            wordplayerclass: def.wordplayerclass,\n            wordclass: def.wordclass,\n            spaceclass: def.spaceclass,\n            badwordclass: def.badwordclass,\n            endspaceclass: def.endspaceclass,\n            unreadwordclass:  def.unreadwordclass,\n            unreadspaceclass:  def.unreadspaceclass,\n            wpmscoreid: def.wpmscoreid,\n            accuracyscoreid: def.accuracyscoreid,\n            sessionscoreid: def.sessionscoreid,\n            errorscoreid: def.errorscoreid,\n            errorrateid: def.errorrateid,\n            scrateid: def.scrateid,\n            formelementwpmscore: def.formelementwpmscore,\n            formelementaccuracy: def.formelementaccuracy,\n            formelementsessionscore: def.formelementsessionscore,\n            formelementendword: def.formelementendword,\n            formelementtime: def.formelementtime,\n            formelementerrors: def.formelementerrors,\n            formelementselfcorrections: def.formelementselfcorrections,\n            formelementnotes: def.formelementnotes,\n            modebutton: def.modebutton,\n\n            spotcheckmodebutton: def.spotcheckmodebutton,\n            transcriptmodebutton: def.transcriptmodebutton,\n            msvmodebutton: def.msvmodebutton,\n            gradingmodebutton: def.gradingmodebutton,\n            clearbutton: def.clearbutton,\n            spotcheckmode: def.spotcheckmode,\n            msvmode: def.msvmode,\n            transcriptmode: def.transcriptmode,\n            gradingmode: def.gradingmode,\n            aiunmatched: def.aiunmatched,\n            passagecontainer: def.passagecontainer,\n\n            maybeselfcorrectedwordclass: def.maybeselfcorrectedwordclass,\n            selfcorrectedwordclass: def.selfcorrectedwordclass,\n            notesclass: def.notesclass,\n            structuralclass: def.structuralclass,\n            meaningclass: def.meaningclass,\n            visualclass: def.visualclass,\n            msvcontainerclass: def.msvcontainerclass\n\n        },\n\n        options: {\n            enabletts: false,\n            targetwpm: 100,\n            ttslanguage: 'en',\n            totalseconds: 60,\n            allowearlyexit: false,\n            timelimit: 60,\n            enforcemarker: true,\n            totalwordcount: 0,\n            wpm: 0,\n            accuracy: 0,\n            sessionscore: 0,\n            endwordnumber: 0,\n            errorwords: {},\n            activityid: null,\n            attemptid: null,\n            sesskey: null\n        },\n\n\n        init: function(config){\n\n            //pick up opts from html\n            var theid='#' + config['id'];\n            var configcontrol = $(theid).get(0);\n            if(configcontrol){\n                var opts = JSON.parse(configcontrol.value);\n                $(theid).remove();\n            }else{\n                //if there is no config we might as well give up\n                log.debug('Gradenow helper js: No config found on page. Giving up.');\n                return;\n            }\n\n            //register the controls\n            this.register_controls();\n\n            //stash important info\n            this.options.activityid = opts['activityid'];\n            this.options.attemptid = opts['attemptid'];\n            this.options.sesskey = opts['sesskey'];\n            this.options.enabletts = opts['enabletts'];\n            this.options.ttslanguage = opts['ttslanguage'];\n            this.options.targetwpm = opts['targetwpm'];\n            this.options.allowearlyexit = opts['allowearlyexit'];\n            this.options.timelimit = opts['timelimit'];\n            this.options.reviewmode = opts['reviewmode'];\n            this.options.readonly = opts['readonly'];\n            this.options.totalwordcount = $('.' + this.cd.wordclass).length ;\n\n            if(opts['sessiontime']>0){\n                //session errors\n                if(opts['sessionerrors']==='' || opts['sessionerrors']===null) {\n                    this.options.errorwords = {};\n                }else{\n                    this.options.errorwords = JSON.parse(opts['sessionerrors']);\n                }\n                if(opts['selfcorrections']==='' || opts['selfcorrections']===null) {\n                    this.options.selfcorrections = {};\n                }else{\n                    this.options.selfcorrections = JSON.parse(opts['selfcorrections']);\n                }\n                this.options.totalseconds=opts['sessiontime'];\n                this.options.endwordnumber=opts['sessionendword'];\n                this.options.sessionscore=opts['sessionscore'];\n                this.options.accuracy=opts['accuracy'];\n                this.options.wpm=opts['wpm'];\n\n                //We may have session matches and AI data, if AI is turned on\n                this.options.sessionmatches=JSON.parse(opts['sessionmatches']);\n                this.options.aidata=opts['aidata'];\n                if(this.options.aidata) {\n                    this.options.transcriptwords = opts['aidata'].transcript.split(\" \");\n\n                    //remove empty elements ... these can get in there\n                    this.options.transcriptwords = this.options.transcriptwords.filter(function (el) {\n                        return el !== '';\n                    });\n\n                }else{\n                    this.options.transcriptwords=[];\n                }\n\n                //if this has been graded, draw the gradestate\n                this.redrawgradestate();\n            }else{\n                //set up our end passage marker\n                this.options.endwordnumber = this.options.totalwordcount;\n            }\n\n            //add the endword marker\n            var thespace = $('#' + this.cd.spaceclass + '_' + this.options.endwordnumber );\n            thespace.addClass(this.cd.endspaceclass);\n\n            //register events\n           this.register_events();\n\n            //initialise our audio duration. We need this to calc. wpm\n            //but if allowearlyexit is false, actually we can skip waiting for audio.\n            //After audio loaded(if nec.) we call processscores to init score boxe\n            //TODO: really should get audio duration at recording time.\n            var m = this;\n            var processloadedaudio= function(){\n                if(m.options.allowearlyexit){\n                    //using the audio player duration is actually more accurate than aidata.sessiontime\n                    //but it will give diff results to score used in autograding which when allowing earlyexit uses aiddata.sessiontime\n                    // (aidata.sessiontime is the end time of last recognised word.)\n                    //So to ensure consistency we also use the aidata.sessiontime here\n                    if(m.options.aidata && m.options.aidata.sessiontime) {\n                        m.options.totalseconds = m.options.aidata.sessiontime;\n                    }else {\n                        m.options.totalseconds = Math.round($('#' + m.cd.audioplayerclass).prop('duration'));\n                    }\n                }else{\n                    m.options.totalseconds = m.options.timelimit;\n                }\n                //update form field\n                m.controls.formelementtime.val(m.options.totalseconds);\n                m.processscores();\n            };\n\n            //we used to use the audio player time, but we try not to, and anyway its best not to\n            //depend on a duration being available. Audio might expire\n            /*\n            var audioplayer = $('#' + this.cd.audioplayerclass);\n            if(audioplayer.prop('readyState')<1 && this.options.allowearlyexit){\n                audioplayer.on('loadedmetadata',processloadedaudio);\n            }else{\n                processloadedaudio();\n            }\n            */\n            processloadedaudio();\n\n            //init our popover helper which sets up the button events\n            this.init_popoverhelper();\n\n        },\n\n        //set up events related to popover helper\n        init_popoverhelper: function(){\n            var that =this;\n\n            //when the user clicks the reject popover accept button, we arrive here\n            popoverhelper.onReject=function(){\n                var clickwordnumber = $(this).attr('data-wordnumber');\n\n                //if nothing changed, just close the popover\n                var nochange = (clickwordnumber in that.options.errorwords);\n                if(nochange){\n                    popoverhelper.remove();\n                    return;\n                }\n\n                //if a new choice was made update things\n                var playchain= that.fetchPlayChain(clickwordnumber);\n                for(var wordindex = playchain.startword;wordindex<=playchain.endword;wordindex++){\n                    if(!(wordindex in that.options.errorwords)){\n                        if(wordindex==clickwordnumber) {\n                            var theword = $('#' + that.cd.wordclass + '_' + wordindex);\n                            var thespace = $('#' + that.cd.spaceclass + '_' + wordindex);\n                            var themsv = {};\n                            that.storewordstate(def.stateerror, wordindex, theword.text(), themsv);\n                            theword.addClass(that.cd.badwordclass);\n                            if (wordindex != playchain.endword) {\n                                //  thespace.addClass(that.cd.spotcheckmode);\n                            }\n                        }\n                    }\n                }\n                //that.markup_badspaces();\n                that.markup_aiunmatchedspaces();\n                that.processscores();\n                popoverhelper.remove();\n            };\n\n            //when the user clicks the popover accept button, we arrive here\n            popoverhelper.onAccept=function(){\n                var clickwordnumber = $(this).attr('data-wordnumber');\n\n                //if nothing changed, just close the popover\n                var nochange = !(clickwordnumber in that.options.errorwords);\n                if(nochange){\n                    popoverhelper.remove();\n                    return;\n                }\n                //if a new choice was made update things\n                var playchain= that.fetchPlayChain(clickwordnumber);\n                for(var wordindex = playchain.startword;wordindex<=playchain.endword;wordindex++){\n                    if(wordindex in that.options.errorwords){\n                        if(wordindex==clickwordnumber) {\n                            delete that.options.errorwords[wordindex];\n                            var theword = $('#' + that.cd.wordclass + '_' + wordindex);\n                            var thespace = $('#' + that.cd.spaceclass + '_' + wordindex);\n                            theword.removeClass(that.cd.badwordclass);\n                        }\n                    }\n                }\n                //that.markup_badspaces();\n                that.markup_aiunmatchedspaces();\n                that.processscores();\n                popoverhelper.remove();\n            };\n\n            //when the user clicks the reject popover close button in msv mode, we arrive here\n            popoverhelper.onMSVClose=function(){\n                var clickwordnumber = $(this).attr('data-wordnumber');\n                var msvResults = popoverhelper.fetchMSVResults();\n\n                that.markupPlayChain(msvResults.state,clickwordnumber,msvResults.msv,that);\n\n                that.markup_aiunmatchedspaces();\n                that.processscores();\n                popoverhelper.remove();\n            };\n\n            //init the popover now that we have set the correct callback event handling thingies\n            popoverhelper.init();\n        },\n\n        getMSVBadge: function(msv){\n            var items = '';\n\n            //if we have no MSV just move on\n            if(!msv) {\n                return false;\n            }\n\n            //if have msv see whats there.\n            if(msv.m && msv.m===\"1\"){\n                items+=\"M\";\n            }\n            if(msv.s && msv.s===\"1\"){\n                items+=\"S\";\n            }\n            if(msv.v && msv.v===\"1\"){\n                items+=\"V\";\n            }\n            if(items===''){\n                return false;\n            }else{\n                return items;\n            }\n        },\n\n        getMSVClasses: function(msv){\n            var addclasses = '';\n            var removeclasses = '';\n\n            //if we have no MSV just move on\n            if(!msv) {\n                removeclasses = this.cd.structuralclass + ' '\n                    +  this.cd.meaningclass + ' '\n                    + this.cd.visualclass + ' ';\n\n                return {addclasses: addclasses,\n                    removeclasses: removeclasses};\n            }\n\n            //if have msv see whats there.\n            if(msv.s && msv.s==1){\n                addclasses += this.cd.structuralclass + ' ' ;\n            }else{\n                removeclasses += this.cd.structuralclass + ' ' ;\n            }\n            if(msv.m && msv.m==1){\n                addclasses += this.cd.meaningclass + ' ' ;\n            }else{\n                removeclasses += this.cd.meaningclass + ' ' ;\n            }\n            if(msv.v && msv.v==1){\n                addclasses += this.cd.visualclass + ' ' ;\n            }else{\n                removeclasses += this.cd.visualclass + ' ' ;\n            }\n            return {addclasses: addclasses, removeclasses: removeclasses};\n        },\n\n        markupPlayChain: function(state,wordnumber,msv,that){\n            //add to error\n            var addclasses_word = '';\n            var removeclasses_word = '';\n            var addclasses_space = '';\n            var removeclasses_space= '';\n\n            //fetch css classes for msv\n            var msvmarkup = that.getMSVClasses(msv);\n            addclasses_word = msvmarkup.addclasses;\n            removeclasses_word = msvmarkup.removeclasses;\n            \n            //fetch data-msvbadge\n            var msvbadge = that.getMSVBadge(msv);\n\n            //state\n            switch(state){\n                case def.stateerror:\n                    addclasses_word += that.cd.badwordclass  + ' ' ;\n                    removeclasses_word += that.cd.selfcorrectedwordclass + ' ' +  that.cd.maybeselfcorrectedwordclass + ' ';\n                    break;\n                case def.stateselfcorrect:\n                    addclasses_word +=  that.cd.selfcorrectedwordclass  + ' ';\n                    removeclasses_word +=  that.cd.badwordclass + ' ' +  that.cd.maybeselfcorrectedwordclass + ' ';\n                    break;\n\n                case def.statecorrect:\n                    removeclasses_word +=  that.cd.badwordclass + ' ' +  that.cd.selfcorrectedwordclass + ' ' +  that.cd.maybeselfcorrectedwordclass + ' ';\n            }\n\n            var playchain= that.fetchPlayChain(wordnumber);\n            for(var wordindex = playchain.startword;wordindex<=playchain.endword;wordindex++){\n                if(wordnumber==wordindex) {\n                    var theword = $('#' + that.cd.wordclass + '_' + wordindex);\n                    var thespace = $('#' + that.cd.spaceclass + '_' + wordindex);\n                    that.storewordstate(state, wordindex, theword.text(), msv);\n                    //add classes\n                    theword.addClass(addclasses_word);\n                    if (wordindex != playchain.endword) {\n                        thespace.addClass(addclasses_space);\n                    }\n                    //remove classes\n                    theword.removeClass(removeclasses_word);\n                    thespace.removeClass(removeclasses_space);\n\n                    //msv badge\n                    if (msvbadge) {\n                        theword.attr('data-msvbadge', msvbadge);\n                    } else {\n                        theword.removeAttr('data-msvbadge');\n                    }\n                }\n\n            }\n        },\n\n        register_controls: function(){\n\n            this.controls.wordplayer = $('#' + this.cd.wordplayerclass);\n            this.controls.audioplayer = $('#' + this.cd.audioplayerclass);\n            this.controls.eachword = $('.' + this.cd.wordclass);\n            this.controls.eachspace = $('.' + this.cd.spaceclass);\n            this.controls.endwordmarker =  $('#' + this.cd.spaceclass + '_' + this.options.endwordnumber);\n            this.controls.spotcheckword = $('.' + this.cd.spotcheckmode);\n\n            this.controls.wpmscorebox = $('#' + this.cd.wpmscoreid);\n            this.controls.accuracyscorebox = $('#' + this.cd.accuracyscoreid);\n            this.controls.sessionscorebox = $('#' + this.cd.sessionscoreid);\n            this.controls.errorscorebox = $('#' + this.cd.errorscoreid);\n            this.controls.errorratebox = $('#' + this.cd.errorrateid);\n            this.controls.scratebox = $('#' + this.cd.scrateid);\n\n            this.controls.formelementwpmscore = $(\"#\" + this.cd.formelementwpmscore);\n            this.controls.formelementsessionscore = $(\"#\" + this.cd.formelementsessionscore);\n            this.controls.formelementaccuracy = $(\"#\" + this.cd.formelementaccuracy);\n            this.controls.formelementendword = $(\"#\" + this.cd.formelementendword);\n            this.controls.formelementerrors = $(\"#\" + this.cd.formelementerrors);\n            this.controls.formelementnotes = $(\"#\" + this.cd.formelementnotes);\n            this.controls.formelementselfcorrections = $(\"#\" + this.cd.formelementselfcorrections);\n            this.controls.formelementtime = $(\"#\" + this.cd.formelementtime);\n\n            this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\n            this.controls.notes = $('#' +  this.cd.notesclass);\n\n            //passage action buttons\n            this.controls.modebutton =  $(\"#\" + this.cd.modebutton);\n            this.controls.gradingmodebutton =  $(\"#\" + this.cd.gradingmodebutton);\n            this.controls.spotcheckmodebutton =  $(\"#\" + this.cd.spotcheckmodebutton);\n            this.controls.msvmodebutton =  $(\"#\" + this.cd.msvmodebutton);\n            this.controls.transcriptmodebutton =  $(\"#\" + this.cd.transcriptmodebutton);\n            this.controls.clearbutton =  $(\"#\" + this.cd.clearbutton);\n\n        },\n\n        register_events: function(){\n            var that = this;\n            //set up event handlers\n\n\n            //Play audio from and to spot check part\n            this.controls.passagecontainer.on('click',\n                '.' + this.cd.badwordclass +\n                ', .' + this.cd.maybeselfcorrectedwordclass +\n                ', .' + this.cd.selfcorrectedwordclass +\n                ', .' + this.cd.aiunmatched,function(){\n                if(that.currentmode===def.modespotcheck || that.currentmode===def.modemsv) {\n                    var wordnumber = parseInt($(this).attr('data-wordnumber'));\n                    that.doPlaySpotCheck(wordnumber);\n                }\n            });\n\n\n            //in review mode, do nuffink though ... thats for the student\n            if(this.options.readonly){\n                //do nothing\n\n            //here we will put real options for playing the model reading and user reading etc\n            }else if(false){\n                /*\n                if(this.enabletts && this.options.ttslanguage != 'none'){\n                    this.controls.eachword.click(this.playword);\n                }\n                */\n\n                //if we have AI data then turn on spotcheckmode\n                if(this.options.sessionmatches) {\n                    this.doSpotCheckMode();\n                }\n\n                //add listeners for click events\n                this.controls.eachword.click(\n                    function() {\n                        //if we are in spotcheck mode just return, we do not grade\n                        if (that.currentmode === def.modespotcheck) {\n                            return;\n                        }\n\n                        //get the word that was clicked\n                        var wordnumber = $(this).attr('data-wordnumber');\n                        var theword = $(this).text();\n\n                        if (that.currentmode === def.modetranscript) {\n                            var chunk = that.fetchTranscriptChunk(wordnumber);\n                            if(chunk){\n                                popoverhelper.addTranscript(this,chunk);\n                            }\n                            return;\n                        }\n                    });\n\n            //if not in review mode\n            }else{\n\n                //update hidden form control value each time we change notes\n                this.controls.notes.change(function(){\n                    that.controls.formelementnotes.val($(this).val());\n                });\n\n                //process word clicks\n                this.controls.eachword.click(\n                    function() {\n\n                        //get the word that was clicked\n                        var wordnumber = $(this).attr('data-wordnumber');\n                        var theword = $(this).text();\n                        var themsv = {};\n\n                        switch(that.currentmode){\n                            case def.modespotcheck:\n                                if($(this).hasClass(that.cd.badwordclass) || $(this).hasClass(that.cd.aiunmatched)) {\n                                    popoverhelper.addQuickGrader(this);\n                                }\n                                return;\n\n                            case def.modetranscript:\n                                var chunk = that.fetchTranscriptChunk(wordnumber);\n                                if(chunk){\n                                    popoverhelper.addTranscript(this,chunk);\n                                }\n                                return;\n\n                            case def.modemsv:\n                                // if($(this).hasClass(that.cd.badwordclass)||\n                                // $(this).hasClass(that.cd.selfcorrectedwordclass) ||\n                                // $(this).hasClass(that.cd.maybeselfcorrectedwordclass)  ||\n                                // $(this).hasClass(that.cd.aiunmatched)) {\n                                var msvdata={};\n                                if(wordnumber in that.options.selfcorrections) {\n                                    msvdata.state=def.stateselfcorrect;\n                                    msvdata.msv=that.options.selfcorrections[wordnumber].msv;\n\n                                 }else if(wordnumber in that.options.errorwords) {\n                                    msvdata.state=def.stateerror;\n                                    msvdata.msv=that.options.errorwords[wordnumber].msv;\n                                }else{\n                                    msvdata.state=def.statecorrect;\n                                    msvdata.msv={s: 0, m: 0, v: 0};\n                                }\n                                //its possible we got here with no msv if error was not added correctly\n                                if(!msvdata.msv || !Object.keys(msvdata.msv).length){msvdata.msv={s: 0, m: 0, v: 0};}\n\n                                popoverhelper.addMSVGrader(this,msvdata);\n                                // }\n                                return;\n\n                            case def.modegrading:\n                            default:\n                                //this will disallow badwords after the endmarker\n                                if(that.options.enforcemarker && Number(wordnumber)>Number(that.options.endwordnumber)){\n                                    return;\n                                }\n\n                                if(wordnumber in that.options.errorwords){\n                                    that.storewordstate(def.statecorrect,wordnumber,theword,themsv);\n                                    $(this).removeClass(that.cd.badwordclass + ' ' + that.cd.selfcorrectedwordclass);\n\n                                }else{\n                                    that.storewordstate(def.stateerror,wordnumber,theword,themsv);\n                                    $(this).removeClass(that.cd.selfcorrectedwordclass);\n                                    $(this).addClass(that.cd.badwordclass);\n                                }\n\n                                //we remove msv markup though its just tidy up. It will have been\n                                //lost in the toggle in the data layer anyway\n                                var msvclasses = that.getMSVClasses(themsv);\n                                $(this).removeClass(msvclasses.removeclasses);\n\n                                //finally update scores\n                                that.processscores();\n                        }\n                    }\n                ); //end of each word click\n\n                //process space clicks\n                this.controls.eachspace.click(\n                    function() {\n\n                        //if we are in spotcheck or transcript check mode just return, we do not grade\n                        if(that.currentmode===def.modespotcheck ||\n                            that.currentmode===def.modetranscript ||\n                            that.currentmode===def.modemsv){\n                            return;\n                        }\n\n                        //this event is entered by  click on space\n                        //it relies on attr data-wordnumber being set correctly\n                        var wordnumber = $(this).attr('data-wordnumber');\n                        var thespace = $('#' + that.cd.spaceclass + '_' + wordnumber);\n\n                        if(wordnumber === that.options.endwordnumber){\n                            that.options.endwordnumber = that.options.totalwordcount;\n                            thespace.removeClass(that.cd.endspaceclass);\n                            $('#' + that.cd.spaceclass + '_' + that.options.totalwordcount).addClass(that.cd.endspaceclass);\n                        }else{\n                            $('#' + that.cd.spaceclass + '_' + that.options.endwordnumber).removeClass(that.cd.endspaceclass);\n                            that.options.endwordnumber = wordnumber;\n                            thespace.addClass(that.cd.endspaceclass);\n                        }\n                        that.processunread();\n                        that.processscores();\n                    }\n                );//end of each space click17\n\n                //process clearbutton's click event\n                this.controls.clearbutton.click(function(){\n\n                    //if we are in spotcheck or transcript check mode just return, we do not grade\n                    if(that.currentmode===def.modespotcheck || that.currentmode===def.modetranscript || that.currentmode===def.modemsv){\n                        return;\n                    }\n\n                    //clear all the error words\n                    $('.' + that.cd.badwordclass).each(function(index){\n                        var wordnumber = $(this).attr('data-wordnumber');\n                        delete that.options.errorwords[wordnumber];\n                        $(this).removeClass(that.cd.badwordclass);\n                    });\n\n                    //remove unread words\n                    $('.' + that.cd.wordclass).removeClass(that.cd.unreadwordclass);\n\n                    //set endspace to last space\n                    that.options.endwordnumber = that.options.totalwordcount;\n                    $('.' + that.cd.spaceclass).removeClass(that.cd.endspaceclass);\n                    $('#' + that.cd.spaceclass + '_' + that.options.totalwordcount).addClass(that.cd.endspaceclass);\n\n                    //reprocess scores\n                    that.processscores();\n                });\n\n\n                //modebutton: turn on grading\n                this.controls.gradingmodebutton.click(function(){\n                    that.undoCurrentMode();\n                    that.doGradingMode();\n                    that.updateButtonStates();\n                });\n\n            }//end of if/else reviewmode\n\n            //either in or out of review mode we want these\n            //modebutton: turn on spotchecking\n            this.controls.spotcheckmodebutton.click(function(){\n                that.undoCurrentMode();\n                that.doSpotCheckMode();\n                that.updateButtonStates();\n            });\n\n            //either in or out of review mode we want these\n            //modebutton: turn on MSV mode\n            this.controls.msvmodebutton.click(function(){\n                that.undoCurrentMode();\n                that.doMSVMode();\n                that.updateButtonStates();\n            });\n\n            //modebutton: turn on transcript checking\n            this.controls.transcriptmodebutton.click(function(){\n                that.undoCurrentMode();\n                that.doTranscriptMode();\n                that.updateButtonStates();\n            });\n        },\n\n        undoCurrentMode: function(){\n            switch(this.currentmode){\n                case def.modegrading:\n                    this.undoGradingMode();\n                    break;\n                case def.modespotcheck:\n                    this.undoSpotCheckMode();\n                    break;\n                case def.modemsv:\n                    this.undoMSVMode();\n                    break;\n                case def.modetranscript:\n                    this.undoTranscriptMode();\n                    break;\n            }\n        },\n\n        updateButtonStates: function(){\n            var printAttemptBtn = $(\"a#printattempt\");\n            switch(this.currentmode){\n                case def.modegrading:\n                    this.controls.gradingmodebutton.prop('disabled', true);\n                    this.controls.spotcheckmodebutton.prop('disabled', false);\n                    this.controls.msvmodebutton.prop('disabled', false);\n                    this.controls.transcriptmodebutton.prop('disabled', false);\n                    printAttemptBtn.attr('href', printAttemptBtn.attr('data-base-url') + \"&mode=manual\");\n                    break;\n                case def.modespotcheck:\n                    this.controls.gradingmodebutton.prop('disabled', false);\n                    this.controls.spotcheckmodebutton.prop('disabled', true);\n                    this.controls.msvmodebutton.prop('disabled', false);\n                    this.controls.transcriptmodebutton.prop('disabled', false);\n                    printAttemptBtn.attr('href', printAttemptBtn.attr('data-base-url') + \"&mode=quick\");\n                    break;\n                case def.modemsv:\n                    this.controls.gradingmodebutton.prop('disabled', false);\n                    this.controls.spotcheckmodebutton.prop('disabled', false);\n                    this.controls.msvmodebutton.prop('disabled', true);\n                    this.controls.transcriptmodebutton.prop('disabled', false);\n                    printAttemptBtn.attr('href', printAttemptBtn.attr('data-base-url') + \"&mode=power\");\n                    break;\n                case def.modetranscript:\n                    this.controls.gradingmodebutton.prop('disabled', false);\n                    this.controls.spotcheckmodebutton.prop('disabled', false);\n                    this.controls.msvmodebutton.prop('disabled', false);\n                    this.controls.transcriptmodebutton.prop('disabled', true);\n                    printAttemptBtn.attr('href', printAttemptBtn.attr('data-base-url') + \"&mode=transcript\");\n                    break;\n            }\n\n        },\n\n        /*\n        * Here we fetch the playchain, start playing frm audiostart and add an event handler to stop at audioend\n         */\n        doPlaySpotCheck: function(spotcheckindex){\n          var playchain = this.fetchPlayChain(spotcheckindex);\n          var theplayer = this.controls.audioplayer[0];\n          //we pad the play audio by 0.5 seconds beginning and end\n            var pad = 0.5;\n            var duration = theplayer.duration;\n            //determine starttime\n            var endtime = parseFloat(playchain.audioend);\n            if(!isNaN(duration) && duration > (endtime + pad)){\n                endtime = endtime + pad;\n            }\n            //determine endtime\n            var starttime = parseFloat(playchain.audiostart);\n            if((starttime -pad) > 0){\n                starttime = starttime -pad;\n            }\n\n          theplayer.currentTime=starttime;\n          $(this.controls.audioplayer).off(\"timeupdate\");\n          $(this.controls.audioplayer).on(\"timeupdate\",function(e){\n              var currenttime = theplayer.currentTime;\n              if(currenttime >= endtime){\n                  $(this).off(\"timeupdate\");\n                  theplayer.pause();\n              }\n          });\n            theplayer.play();\n        },\n\n        /*\n        * The playchain is all the words in a string of badwords.\n        * The complexity comes because a bad word  is usually one that isunmatched by AI.\n        * So if the teacher clicks on a passage word that did not appear in the transcript, what should we play?\n        * Answer: All the words from the last known to the next known word. Hence we create a play chain\n        * For consistency, if the teacher flags matched words as bad, while we do know their precise location we still\n        * make a play chain. Its not a common situation probably.\n         */\n        fetchPlayChain: function(spotcheckindex){\n\n            //find startword\n          var startindex=spotcheckindex;\n          var starttime = -1;\n          for(var wordnumber=spotcheckindex;wordnumber>0;wordnumber--){\n             var isbad = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.badwordclass);\n             var isunmatched =$('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\n             //if current wordnumber part of the playchain, set it as the startindex.\n              // And get the audiotime if its a matched word. (we only know audiotime of matched words)\n             if(isbad || isunmatched){\n                 startindex = wordnumber;\n                 if(!isunmatched){\n                     starttime=this.options.sessionmatches['' + wordnumber].audiostart;\n                 }else{\n                     starttime=-1;\n                 }\n             }else{\n                 break;\n             }\n          }//end of for loop --\n          //if we have no starttime then we need to get the next matched word's audioend and use that\n          if(starttime==-1){\n              starttime = 0;\n              for(var wordnumber=startindex-1;wordnumber>0;wordnumber--){\n                  if(this.options.sessionmatches['' + wordnumber]){\n                      starttime=this.options.sessionmatches['' + wordnumber].audioend;\n                      break;\n                  }\n              }\n          }\n\n            //find endword\n            var endindex=spotcheckindex;\n            var endtime = -1;\n            var passageendword = this.options.totalwordcount;\n            for(var wordnumber=spotcheckindex;wordnumber<=passageendword;wordnumber++){\n                var isbad = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.badwordclass);\n                var isunmatched =$('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\n                //if its part of the playchain, set it to startindex. And get time if its a matched word.\n                if(isbad || isunmatched){\n                    endindex = wordnumber;\n                    if(!isunmatched){\n                        endtime=this.options.sessionmatches['' + wordnumber].audioend;\n                    }else{\n                        endtime=-1;\n                    }\n                }else{\n                    break;\n                }\n            }//end of for loop --\n            //if we have no endtime then we need to get the next matched word's audiostart and use that\n            if(endtime==-1){\n                endtime = this.options.totalseconds;\n                for(var wordnumber=endindex+1;wordnumber<=passageendword;wordnumber++){\n                    if(this.options.sessionmatches['' + wordnumber]){\n                        endtime=this.options.sessionmatches['' + wordnumber].audiostart;\n                        break;\n                    }\n                }\n            }\n            var playchain = {};\n            playchain.startword=startindex;\n            playchain.endword=parseInt(endindex);\n            playchain.audiostart=starttime;\n            playchain.audioend=parseInt(endtime);\n            //console.log('audiostart:' + starttime);\n            //console.log('audioend:' + endtime);\n\n            return playchain;\n\n        },\n\n        //mark up all ai unmatched words as aiunmatched\n        markup_aiunmatchedwords: function(){\n            var that =this;\n            if(this.options.sessionmatches){\n                var prevmatch=0;\n                $.each(this.options.sessionmatches,function(index,match){\n                    var unmatchedcount = index - prevmatch - 1;\n                    if(unmatchedcount>0){\n                        for(var errorword =1;errorword<unmatchedcount+1; errorword++){\n                            var wordnumber = prevmatch + errorword;\n                            $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\n                        }\n                    }\n                    prevmatch = parseInt(index);\n                });\n\n                //mark all words from last matched word to the end as aiunmatched\n                for(var errorword =prevmatch+1;errorword<=this.options.endwordnumber; errorword++){\n                    var wordnumber = errorword;\n                    $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\n                }\n            }\n\n        },\n\n\n        markup_aiunmatchedspaces: function(){\n            var that =this;\n            $('.' + this.cd.wordclass + '.' + this.cd.aiunmatched).each(function(index){\n                    var wordnumber = parseInt($(this).attr('data-wordnumber'));\n                    //build chains (highlight spaces) of badwords or aiunmatched\n                    if (that.currentmode===def.modespotcheck && $('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.badwordclass) ||\n                        $('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.aiunmatched)) {\n                        $('#' + that.cd.spaceclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\n                    }\n            });\n        },\n\n\n        /*\n        * Here we mark up the passage for spotcheck mode. This will make up the spaces and the words as either badwords\n        * or aiunmatched words. We need to create playchains so aiunmatched still is indicated visibly even where its\n        * not a badword (ie has been corrected)\n         */\n        doSpotCheckMode: function(){\n            var that = this;\n\n            //mark up all ai unmatched words as aiunmatched\n            this.markup_aiunmatchedwords();\n\n            //mark up spaces between aiunmatched word and spotcheck/aiunmatched word (aiunmatched spaces)\n            this.markup_aiunmatchedspaces();\n\n            //mark up passage as spotcheck\n            this.controls.passagecontainer.addClass(this.cd.spotcheckmode);\n            this.currentmode=\"spotcheck\";\n        },\n\n        undoSpotCheckMode: function(){\n            this.controls.passagecontainer.removeClass(this.cd.spotcheckmode);\n            $('.' + this.cd.wordclass).removeClass(this.cd.aiunmatched);\n            $('.' + this.cd.spaceclass).removeClass(this.cd.aiunmatched);\n            $(this.controls.audioplayer).off(\"timeupdate\");\n            popoverhelper.remove();\n        },\n\n        /*\n     * Here we mark up the passage for msv mode. This will make up the spaces and the words as either badwords\n     * or aiunmatched words. We need to create playchains so aiunmatched still is indeicated visibly even where its\n     * not a badword (ie has been corrected)\n      */\n        doMSVMode: function(){\n            var that = this;\n\n            //mark up all ai unmatched words as aiunmatched\n            this.markup_aiunmatchedwords();\n\n            //mark up spaces between aiunmatched word and spotcheck/aiunmatched word (aiunmatched spaces)\n            this.markup_aiunmatchedspaces();\n\n            //mark up passage as msv\n            this.controls.passagecontainer.addClass(this.cd.msvmode);\n            this.currentmode=def.modemsv;\n        },\n\n        undoMSVMode: function(){\n            this.controls.passagecontainer.removeClass(this.cd.msvmode);\n            $('.' + this.cd.wordclass).removeClass(this.cd.aiunmatched);\n            $('.' + this.cd.spaceclass).removeClass(this.cd.aiunmatched);\n            $(this.controls.audioplayer).off(\"timeupdate\");\n            popoverhelper.remove();\n        },\n\n        /*\n       * Here we mark up the passage for transcript mode.\n        */\n        doTranscriptMode: function(){\n            var that = this;\n            //mark up all ai unmatched words as transcript\n            if(this.options.sessionmatches){\n                var prevmatch=0;\n                $.each(this.options.sessionmatches,function(index,match){\n                    var unmatchedcount = index - prevmatch - 1;\n                    if(unmatchedcount>0){\n                        for(var errorword =1;errorword<unmatchedcount+1; errorword++){\n                            var wordnumber = prevmatch + errorword;\n                            $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\n                        }\n                    }\n                    prevmatch = parseInt(index);\n                });\n\n                //mark all words from last matched word to the end as aiunmatched\n                for(var errorword =prevmatch+1;errorword<=this.options.endwordnumber; errorword++){\n                    var wordnumber = errorword;\n                    $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\n                }\n            }\n\n            //mark up spaces between aiunmatched word and aiunmatched (bad spaces)\n            $('.' + this.cd.aiunmatched).each(function(index){\n                var wordnumber = parseInt($(this).attr('data-wordnumber'));\n                //build chains (highlight spaces) of badwords or aiunmatched\n                if($('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.aiunmatched)){\n                    $('#' + that.cd.spaceclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\n                };\n            });\n\n            this.controls.passagecontainer.addClass(this.cd.transcriptmode);\n            this.currentmode=def.modetranscript;\n        },\n\n        undoTranscriptMode: function(){\n            this.controls.passagecontainer.removeClass(this.cd.transcriptmode);\n            $('.' + this.cd.wordclass).removeClass(this.cd.aiunmatched);\n            $('.' + this.cd.spaceclass).removeClass(this.cd.aiunmatched);\n            popoverhelper.remove();\n        },\n\n        doGradingMode: function(){\n            this.controls.passagecontainer.addClass(this.cd.gradingmode);\n            this.currentmode=def.modegrading;\n        },\n\n        undoGradingMode: function(){\n            this.controls.passagecontainer.removeClass(this.cd.gradingmode);\n        },\n\n        /*\n       * This will take a wordindex and find the previous and next transcript indexes that were matched and\n       * return all the transcript words in between those.\n        */\n        fetchTranscriptChunk: function(checkindex){\n\n            var transcriptlength= this.options.transcriptwords.length;\n            if(transcriptlength==0){return \"\";}\n\n            //find startindex\n            var startindex=-1;\n            for(var wordnumber=checkindex;wordnumber>0;wordnumber--){\n\n                var isunmatched =$('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\n                //if we matched then the subsequent transcript word is the last unmatched one in the checkindex sequence\n                if(!isunmatched){\n                    startindex=this.options.sessionmatches['' + wordnumber].tposition+1;\n                    break;\n                }\n            }//end of for loop\n\n            //find endindex\n            var endindex=-1;\n            for(var wordnumber=checkindex;wordnumber<=transcriptlength;wordnumber++){\n\n                var isunmatched =$('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\n                //if we matched then the previous transcript word is the last unmatched one in the checkindex sequence\n                if(!isunmatched){\n                    endindex=this.options.sessionmatches['' + wordnumber].tposition-1;\n                    break;\n                }\n            }//end of for loop --\n\n            //if there was no previous matched word, we set start to 1\n            if(startindex==-1){startindex=1;}\n            //if there was no subsequent matched word we flag the end as the -1\n            if(endindex==transcriptlength){\n                    endindex=-1;\n            //an edge case is where the first word is not in transcript and first match is the second or later passage\n            //word. It might not be possible for endindex to be lower than start index, but we don't want it anyway\n            }else if(endindex==0 || endindex < startindex){\n                return false;\n            }\n\n            //up until this point the indexes have started from 1, since the passage word numbers start from 1\n            //but the transcript array is 0 based so we adjust. array splice function does not include item and endindex\n            ///so it needs to be one more then start index. hence we do not adjust that\n            startindex--;\n\n            //finally we return the section\n            var  ret=false;\n            if(endindex>0) {\n              ret = this.options.transcriptwords.slice(startindex, endindex).join(\" \");\n            }else{\n              ret = this.options.transcriptwords.slice(startindex).join(\" \");\n            }\n            if(ret.trim()==''){\n                return false;\n            }else{\n                return ret;\n            }\n        },\n\n\n        playword: function(){\n            var m = this;\n            m.controls.wordplayer.attr('src',M.cfg.wwwroot + '/' + def.componentpath  + '/tts.php?txt=' + encodeURIComponent($(this).text())\n                + '&lang=' + m.options.ttslanguage + '&n=' + m.options.activityid);\n            m.controls.wordplayer[0].pause();\n            m.controls.wordplayer[0].load();\n            m.controls.wordplayer[0].play();\n        },\n\n        redrawgradestate: function(){\n            var m = this;\n            this.processunread();\n\n            if(this.options.reviewmode!==this.constants.REVIEWMODE_SCORESONLY) {\n                //mark up errors\n                $.each(m.options.errorwords, function (index) {\n                        var theword = $('#' + m.cd.wordclass + '_' + m.options.errorwords[index].wordnumber);\n                        theword.addClass(m.cd.badwordclass);\n                        var msvmarkup = m.getMSVClasses(m.options.errorwords[index].msv);\n                        theword.addClass(msvmarkup.addclasses);\n\n                        var msvbadge =  m.getMSVBadge(m.options.errorwords[index].msv);\n                        if(msvbadge){\n                            theword.attr('data-msvbadge',msvbadge);\n                        }\n                    }\n                );\n\n                //mark up self corrects\n                $.each(m.options.selfcorrections, function (index) {\n                        var msvmarkup = m.getMSVClasses(m.options.selfcorrections[index].msv);\n                        var msvbadge =  m.getMSVBadge(m.options.selfcorrections[index].msv);\n                        var theword =  $('#' + m.cd.wordclass + '_' + m.options.selfcorrections[index].wordnumber);\n                        theword.addClass(m.cd.selfcorrectedwordclass);\n                        theword.addClass(msvmarkup.addclasses);\n                        if(msvbadge){\n                            theword.attr('data-msvbadge',msvbadge);\n                        }\n                    }\n                );\n\n                //mark up maybe self corrects\n                //self corrections are now auto-detected by aigrade in PHP (ie no maybe).\n                //if its too inaccurate we might go back to maybe(same algorythm)\n                //this.markup_maybeselfcorrects();\n\n                //mark up notes\n                this.controls.notes.val(this.controls.formelementnotes.val());\n\n                //mode distinct mark up. its unlikely you will arrive here in a non \"grading\" mode\n                switch(this.currentmode){\n                    case def.modegrading:\n                        //this is really the absence of modes. They all build on this one.\n                        //so we do not do anything\n                        break;\n\n                    case def.modespotcheck:\n                        this.doSpotCheckMode();\n                        break;\n\n                    case def.modetranscript:\n                        this.doTranscriptMode();\n                        break;\n\n                    case def.modemsv:\n                        this.doMSVMode();\n                        break;\n\n\n                }\n            }\n\n\n\n        },\n\n        storewordstate: function(wordstate, wordnumber,word, msv) {\n            switch(wordstate){\n                case def.stateerror:\n                    this.options.errorwords[wordnumber] = {word: word, wordnumber: wordnumber, msv: msv};\n                    if(wordnumber in this.options.selfcorrections) {\n                        delete this.options.selfcorrections[wordnumber];\n                    }\n                    break;\n\n                case def.stateselfcorrect:\n                    this.options.selfcorrections[wordnumber] = {word: word, wordnumber: wordnumber, msv: msv};\n                    if(wordnumber in this.options.errorwords) {\n                        delete this.options.errorwords[wordnumber];\n                    }\n                    break;\n\n                case def.statecorrect:\n                    if(wordnumber in this.options.errorwords) {\n                        delete this.options.errorwords[wordnumber];\n                    }\n                    if(wordnumber in this.options.selfcorrections) {\n                        delete this.options.selfcorrections[wordnumber];\n                    }\n            }\n\n            //console.log(this.errorwords);\n            return;\n        },\n        processword: function() {\n            var m = this;\n            var wordnumber = $(this).attr('data-wordnumber');\n            var theword = $(this).text();\n            var themsv = {};\n            //this will disallow badwords after the endmarker\n            if(m.options.enforcemarker && Number(wordnumber)>Number(m.options.endwordnumber)){\n                return;\n            }\n\n            if(wordnumber in m.options.errorwords){\n                delete m.options.errorwords[wordnumber];\n                $(this).removeClass(m.cd.badwordclass);\n            }else{\n                m.storewordstate(def.stateerror,wordnumber,theword,themsv);\n                $(this).addClass(m.cd.badwordclass);\n            }\n            m.processscores();\n        },\n        //this function is never called it seems ....\n        processspace: function() {\n            //this event is entered by  click on space\n            //it relies on attr data-wordnumber being set correctly\n            var m = this;\n            var wordnumber = $(this).attr('data-wordnumber');\n            var thespace = $('#' + m.cd.spaceclass + '_' + wordnumber);\n\n            if(wordnumber == m.options.endwordnumber){\n                m.options.endwordnumber = m.options.totalwordcount;\n                thespace.removeClass(m.cd.endspaceclass);\n                $('#' + m.cd.spaceclass + '_' + m.options.totalwordcount).addClass(m.cd.endspaceclass);\n            }else{\n                $('#' + m.cd.spaceclass + '_' + m.options.endwordnumber).removeClass(m.cd.endspaceclass);\n                m.options.endwordnumber = wordnumber;\n                thespace.addClass(m.cd.endspaceclass);\n            }\n            m.processunread();\n            m.processscores();\n        },\n\n        markup_maybeselfcorrects: function(){\n            var that =this;\n            if(this.options.sessionmatches){\n                var prevmatch=false;\n                //loop through matches checking for insertions prior to matches\n                $.each(this.options.sessionmatches,function(index,match){\n                    var maybe=false; // insertions exist between this match and prev match\n                    var verymaybe=false; //this word is matched and prev word is matched, but insertions exist\n\n                    if(prevmatch){\n                        //there are insertions in transcript between matches\n                        if(match.tposition - prevmatch.tposition > 1){\n                            maybe=true;\n                            //passage match positions are adjacent, and prev match was not an alternative match\n                            if(match.pposition - prevmatch.pposition == 1){\n                                if(prevmatch.hasOwnProperty('altmatch') && prevmatch.altmatch===1) {\n                                    verymaybe = false;\n                                }else{\n                                    verymaybe = true;\n                                }\n                            }\n                        }\n                    }else if(prevmatch ===false){\n                        //this is the first passage match, but there have been insertions already in the transcript\n                        if(match.pposition<match.tposition){\n                            maybe=true;\n                            //this is also the first passage word\n                            if(match.pposition==1){\n                                verymaybe=true;\n                            }\n                        }\n                    }\n                    //for now we will just work with very maybes, but we could do maybes\n                    if(verymaybe){\n                        $('#' + that.cd.wordclass + '_' + match.pposition).addClass(that.cd.maybeselfcorrectedwordclass);\n                    }\n                    prevmatch =match;\n                });\n            }\n        },\n\n        processunread: function(){\n            var m = this;\n            m.controls.eachword.each(function(index){\n                var wordnumber = $(this).attr('data-wordnumber');\n                var thespace = $('#' + m.cd.spaceclass + '_' + wordnumber);\n\n                if(Number(wordnumber)>Number(m.options.endwordnumber)){\n                    $(this).addClass(m.cd.unreadwordclass);\n                    thespace.addClass(m.cd.unreadspaceclass);\n\n                    //this will clear badwords after the endmarker\n                    if(m.options.enforcemarker && wordnumber in m.options.errorwords){\n                        delete m.options.errorwords[wordnumber];\n                        $(this).removeClass(m.cd.badwordclass);\n                    }\n                }else{\n                    $(this).removeClass(m.cd.unreadwordclass);\n                    thespace.removeClass(m.cd.unreadspaceclass);\n                }\n            });\n        },\n        processscores: function(){\n            var m = this;\n            var errorscore = Object.keys(m.options.errorwords).length;\n            m.controls.errorscorebox.text(errorscore);\n\n            var selfcorrectionsscore = Object.keys(m.options.selfcorrections).length;\n            //m.controls.errorscorebox.text(errorscore);\n\n            //wpm score\n            //we do not apply accuracy adjustment here, that is only for machine grades.\n            var wpmscore=0;\n            if(m.options.totalseconds > 0){\n                wpmscore = Math.round((m.options.endwordnumber - errorscore) * 60 / m.options.totalseconds);\n            }\n            m.options.wpm = wpmscore;\n            m.controls.wpmscorebox.text(wpmscore);\n\n            //accuracy score\n            var accuracyscore=0;\n            if(m.options.endwordnumber>0) {\n                accuracyscore = Math.round((m.options.endwordnumber - errorscore) / m.options.endwordnumber * 100);\n            }\n            m.options.accuracy = accuracyscore;\n            m.controls.accuracyscorebox.text(accuracyscore);\n\n            //sessionscore\n            var usewpmscore = wpmscore;\n            if(usewpmscore > m.options.targetwpm){\n                usewpmscore = m.options.targetwpm;\n            }\n            var sessionscore = Math.round(usewpmscore/m.options.targetwpm * 100);\n            m.controls.sessionscorebox.text(sessionscore);\n\n            //error rate. See util::calc_error_rate\n            var errorratescore='';\n            if(errorscore > 0 && m.options.endwordnumber > 0) {\n                errorratescore = \"1:\" + Math.round(m.options.endwordnumber / errorscore);\n            }else if(m.options.endwordnumber > 0){\n                errorratescore  = \"-:\" + m.options.endwordnumber;\n            }else{\n                errorratescore  = \"-:-\";\n            }\n            m.options.errorrate = errorratescore;\n            m.controls.errorratebox.text(errorratescore);\n\n            //self correction rate. See utils::calc_sc_rate\n            var scratescore='';\n            if(errorscore > 0 && selfcorrectionsscore > 0) {\n                scratescore = \"1:\" + Math.round((errorscore + selfcorrectionsscore) / selfcorrectionsscore);\n            }else if(errorscore > 0){\n                scratescore  = \"-:\" + errorscore;\n            }else{\n                scratescore  = \"-:-\";\n            }\n            m.options.scrate = scratescore;\n            m.controls.scratebox.text(scratescore);\n\n            //update form field\n            m.controls.formelementwpmscore.val(wpmscore);\n            m.controls.formelementsessionscore.val(sessionscore);\n            m.controls.formelementaccuracy.val(accuracyscore);\n            m.controls.formelementendword.val(m.options.endwordnumber);\n            m.controls.formelementerrors.val(JSON.stringify(m.options.errorwords));\n            m.controls.formelementselfcorrections.val(JSON.stringify(m.options.selfcorrections));\n\n        }\n\n    };\n});"],"file":"gradenowhelper.min.js"}